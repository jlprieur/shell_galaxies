C***************************************************************
C CETTE ROUTINE TRAVAILLE SUR LES BANDES MAGNETIQUES EN
C MODE PHYSIQUE.
C OPERATIONS:
C		IFUNC=1 --> REMBOBINAGE
C		IFUNC=2 --> LECTURE D'UN ENREGISTREMENT
C		IFUNC=3 --> SKIP DE "ISKIP" FICHIERS (TAPE MARK)
C		IFUNC=4 --> ECRITURE D'UN ENREGISTREMENT
C		IFUNC=5 --> ASSIGNATION D'UN LUN A UN "LOGICAL"
C		IFUNC=6 --> ECRITURE FIN DE FICHIER (TAPE MARK)
C
C	APPEL:
C
C	CALL MTACCESS (ILUN,IFUNC,IBUF,INCAR,ISKIP,IEOF,DEVNAM)
C
C
C	ILUN= NO. UNITE LOGIQUE ASSIGNEE A UN NOM "LOGICAL"
C		INTEGER*2
C
C	IFUNC=FONCTION A REALISER SUR LA BANDE
C		INTEGER*2
C
C	IBUF = BUFFER EN ENTREE OU EN SORTIE
C		LOGICAL*1
C
C	INCAR=NOMBRE DE CARACTERES EN ENTREE OU SORTIE < 32767 CAR.
C		INTEGER*2
C
C	ISKIP=NOMBRE DE FICHIERS A SKIPER >0 EN AVANT , <0 EN ARRIERE
C	DANS CE CAS ON EST JUSTE A LA FIN D'UN FICHIER .
C	LE NOMBRE DE FICHIERS EST PHYSIQUE (I.E NOMBRE DE TAPE MARK)
C		INTEGER*2
C
C	IEOF : CODE RETOUR D'UNE FONCTION DECRITE CI-DESSUS
C		INTEGER*2
C
C	IEOF=1   INDICATEUR FIN DE FICHIER EN ENTREE
C	    =2   ERREUR DE LONGUEUR EN LECTURE DONNEE<REELLE
C	    =3   ERREUR DE PARITE EN LECTURE
C	    =4   FIN DE BANDE PHYSIQUEMENT
C	    =5   VOLUME NON MONTEE MAIS ASSIGNE AVEC UN LOGICAL
C	    =6   DATA CHECK EN ECRITURE (VOIR MAINTENANCE)
C	    =7   FIN DE VOLUME I.E DEUX 'TAPE MARK'
C
C
C	DEVNAM= NOM "LOGICAL" ASSIGNE AU MOMENT DU MOUNT DE LA BANDE
C		CHARACTER* DEVNAM   *=LONGUEUR DU NOM DONNE AU MOMENT
C				      DU MOUNT DE LA BANDE
C
C CE PROGRAMME TRAVAILLERA AVEC LE NOM "LOGICAL" DONNE AU MOUNT
C
C
C
C***********************************************************************
C
C            EXEMPLE D'UTILISATION DU PROGRAMME :
C	A) LES DECLARATIONS DANS LE PROGRAMME APPELANT :
C		INTEGER*2 ILUN,IFUNC,INCAR,ISKIP,IEOF
C		LOGICAL*1 IBUF( )  ! DONNER LONGUEUR DE IBUF
C		CHARACTER*5 DEVNAM ! ICI 5 CAR LE "LOGICAL" EST TAPE1
C		DATA DEVNAM/'TAPE1'/ ! LE NOM "LOGICAL" ASSIGNE AU MOUNT
C                      		.......
C				........
C 	B) IL FAUT FAIRE LA CORRESPONDANCE POUR AVOIR LE NO. LOGIQUE
C	                   DE ILUN DONNE PAR LE SYSTEME
C		IFUNC=5		! FONCTION ASSIGNATION
C		CALL MTACCESS(ILUN,IFUNC,IBUF,INCAR,ISKIP,IEOF,DEVNAM)
C		!!!!!ATTENTION IL NE FAUT PAS DETRUIRE  ..ILUN...
C		!!!!! IL SERVIRA POUR TOUTE LA SUITE DE VOS OPERATIONS
C				.......
C				........
C		!  MAINTENANT VOUS POUVEZ EXECUTER TOUTES LES AUTRES
C		!  FONCTIONS A VOTRE SOUHAIT ...............
C		! ..........................................
C	C) MAINTENANT IL FAUT LINKER AVEC VOTRE PROGRAMME :
C
C		LINK PROG,.........,'UTL'/LIBRARY
C 		PROG EST VOTRE PROGRAMME
C		............ET LES AUTRES MODULES DE VOTRE ENSEMBLE
C		'UTL'/LIBRARY   LA LIBRAIRIE DES UTILITAIRES DE MEUDON
C
C
C	D) A L'EXECUTION AVANT DE FAIRE LE RUN EXECUTER :
C		- ALLOCATE MT:
C		-MOU 'DEV'/FOR/DENSITY=XXXX
C		-ASSIGN 'DEV' "LOGICAL"
C
C 		'DEV' UNITE ALLOUEE
C		XXXX  LA DENSITE DESIREE
C		"LOGICAL" LE NOM "LOGICAL" DEFINI DANS VOTRE PROG......
C
C
C***********************************************************************
C
	SUBROUTINE MTACCESS (ILUN,IFUNC,IBUF,INCAR,ISKIP,IEOF,DEVNAM)
C
C	DEFINITIONS:
C***********************************************************************
	PARAMETER BUFSIZE=1
	PARAMETER EOF='870'X
	PARAMETER NOLOGNAM='1BC'X
	PARAMETER IVDEVNAM='144'X
 
	PARAMETER NOPRIV='24'X
	PARAMETER IO$_READLBLK='21'X
	PARAMETER IO$_REWIND='24'X
	PARAMETER IO$_WRITELBLK='20'X
	PARAMETER IO$_WRITEMARK='1B'X
	PARAMETER IO$_WRITEOF='28'X
	PARAMETER IO$_SKIPFILE='25'X
C
C
	INTEGER*2 ENDFLAG,IOSB(4),ILUN,ISTAT
	INTEGER*2 IFUNC,INCAR,ISKIP,IEOF
	INTEGER*4 SYS$ASSIGN,SYS$QIOW,RETCODE
	LOGICAL*1 IBUF(1)
	CHARACTER*(*) DEVNAM
C
C
C********************************************
C FONCTION A REALISER:
C********************************************
	GOTO (100,200,300,400,500,600) IFUNC
C********************************************
C REWIND TAPE:
C********************************************
100	RETCODE=SYS$QIOW(,%VAL(ILUN),%VAL(IO$_REWIND),IOSB,,,,,,,,)
	IF (RETCODE.NE.1) GO TO 9000
	RETURN
C********************************************
C READ RECORD TAPE:
C********************************************
200	RETCODE=SYS$QIOW(,%VAL(ILUN),%VAL(IO$_READLBLK),IOSB,,,
     * %REF(IBUF),%VAL(INCAR),,,,)
	IEOF=0
C	WRITE (6,777) RETCODE,IOSB
777	FORMAT (1X,'RET=',I5,4('SS',I5))
	IF (RETCODE.NE.1) GO TO 9000
	IF (IOSB(1) .EQ. EOF)  IEOF=1
	IF (IOSB(1) .EQ. 2104) IEOF=2	!2104=X'838' DATA OVERUN
	IF (IOSB(1) .EQ. 500)  IEOF=3	!500=X'1F4' PARITY
	IF (IOSB(1) .EQ. 2168 ) IEOF=4	!2168=X'878' END OF TAPE
C Ici il y a erreur de longueur donnee<reelle
	IF (IOSB(1) .EQ. 596 ) IEOF=5	!596=X'254' NO VOLUME MOUNTED
	INCAR=IOSB(2)	! NOMBRE DE CARACTERES DANS RECORD BANDE
C	IF (IOSB(1) .NE. 1) WRITE (6,888)RETCODE,IOSB
C	WRITE (6,250) INCAR
250	FORMAT (1X, 'NOMBRES DE CARACTERES LUS :',I5)
	RETURN
C
C**********************************************************
C SKIP FILES:
C**********************************************************
300	RETCODE=SYS$QIOW(,%VAL(ILUN),%VAL(IO$_SKIPFILE),IOSB,,,
     * %VAL(ISKIP),,,,,)
C	WRITE (6,9999) RETCODE,ISKIP
C9999	FORMAT (1X,'RET=',I5,'ISKIP=',I5)
	IF (RETCODE.NE.1) GO TO 9000
	IF (IOSB(1) .EQ. 2168 ) IEOF=4	!2168=X'878' END OF TAPE
	IF (IOSB(1) .EQ. 2464 ) IEOF=7	! 2464=X'9A0' END OF VOLUME
	RETURN
C*********************************************
C	WRITE RECORD ON TAPE
C*********************************************
400	RETCODE=SYS$QIOW(,%VAL(ILUN),%VAL(IO$_WRITELBLK),IOSB,,,
     *%REF(IBUF),%VAL(INCAR),,,,)
	IEOF=0
	IF (RETCODE.NE.1) GO TO 9000
	IF (IOSB(1) .EQ. 2168 ) IEOF=4	!2168=X'878' END OF TAPE
	IF (IOSB(1) .EQ. 596) IEOF=5	!596=X'254' NO VOLUME MOUNTED
	IF (IOSB(1) .EQ. 92 ) IEOF=6 	!92=X'5C' DATA CHECK
C	WRITE(6,777) RETCODE,IOSB
	RETURN
C
C***********************************************
C	ASSIGNATION LUN A TAPE
C***********************************************
500	RETCODE=SYS$ASSIGN(%DESCR(DEVNAM),ILUN,,)
	IF (RETCODE.NE.1) GO TO 9000
	RETURN
C
C**********************************************
C	WRITE EOF (TAPE MARK)
C**********************************************
600	RETCODE=SYS$QIOW(,%VAL(ILUN),%VAL(IO$_WRITEOF),IOSB,,,,,,,,)
	IF (RETCODE.NE.1) GO TO 9000
	RETURN
C*********************************************
C	ERREURS:
C*********************************************
9000	IF (RETCODE.EQ.NOLOGNAM) STOP ' *** MT NOT ASSIGNED ***'
	IF (RETCODE.EQ.NOPRIV)   STOP ' *** MT NOT FOREIGN ***'
	IF (RETCODE.EQ.IVDEVNAM) STOP ' *** INVALID DEVICE NAME ***'
	IF (RETCODE.EQ.2312 ) WRITE (6,912)	! NO SUCH DEV
912	FORMAT(1X,'*** MAUVAISE ASSIGNATION OUBLI...')
C	WRITE (6,9001) RETCODE	!IMPRESSION CODE RETOUR
9001	FORMAT (' *** ERREUR I/O BANDE= ',Z8,' HEX ***')
C	WRITE (6,888) RETCODE,IOSB
888	FORMAT (1X,'RETCODE=',I5,4('SS',Z4))
	INCAR=IOSB(2)	!NOMBRE DE CARACTERES
	RETURN
	END
