C   
C   *****  TWO BODY EPHEMERIS GENERATOR - TBEG4 VERSION *****  
C   
C   THE TWO BODY EPHEMERIS GENERATOR (TBEG) IS A SELF-CONTAINED
C   PROGRAM DESIGNED TO PRODUCE PREDICTED OBSERVABLES OF A
C   COMET OR MINOR PLANET FROM OSCULATING ELEMENTS THAT ARE INPUT BY   
C   THE USER. IT ACCOMPLISHES THIS THROUGH THE COMPUTATION OF A TWO-BODY
C   ORBIT OF THE OBJECT FROM THE OSCULATING ELEMENTS AND THE COMPUTATION
C   OF SOLAR COORDINATES FROM NEWCOMB'S THEORY. THUS THE PROGRAM AVOIDS 
C   THE NECESSITY OF NUMERICALLY INTEGRATING THE OBJECT'S ORBIT, AS WELL
C   AS READING AN EXTERNAL PLANETARY EPHEMERIS. 
C   
C   THIS PROGRAM WAS WRITTEN AT THE JET PROPULSION LABORATORY BY
C   DR. M.S.W. KEESEY. SUBROUTINE HELXYZ WAS WRITTEN BY DR. D.K. YEOMANS.   
C   SUBROUTINE SUN WAS DEVELOPED AT THE U.S. NAVAL OBSERVATORY. 
C   
C   THIS PROGRAM DOES NOT USE MORE THAN ONE SET OF OSCULATING ELEMENTS  
C   FOR A GIVEN EPHEMERIS INTERVAL; THAT IS, EACH EPHEMERIS INTERVAL
C   MUST CORRESPOND TO ONE AND ONLY ONE SET OF OSCULATING ELEMENTS. 
C   
C   INPUT PARAMETERS ARE DEFINED AS FOLLOWS:
C      'BODY'   IS THE OPTION SPECIFYING WHETHER A COMET OR MINOR PLANET
C                      EPHEMERIS IS DESIRED.
C      'INQNX'  IS THE EQUINOX THAT THE INPUT ELEMENTS ARE REFERRED TO,
C                      WHETHER B1950.0 OR J2000.0.
C      'OUTQNX' IS THE OPTION SPECIFYING WHETHER THE EPHEMERIS IS TO BE 
C                      REFERRED TO THE B1950.0 OR J2000.0 EQUINOX.
C      'IOPT'   IS THE PROGRAM OPTION DESIRED.  
C      'NAPPS'  IS THE NUMBER OF SETS OF ELEMENTS TO BE READ IN.
C      'STACOR(1)' IS THE EAST LONGITUDE OF THE OBSERVATORY (IF A 
C                      TOPOCENTRIC EPHEMERIS IS DESIRED).
C      'SPHI'   IS THE GEODETIC (OR GEOGRAPHIC) LATITUDE OF THE 
C                      OBSERVATORY.
C      'STAHGT' IS THE HEIGHT OF THE OBSERVATORY ABOVE SEA LEVEL.
C      'ETMUTC' IS THE DIFFERENCE BETWEEN EPHEMERIS TIME AND COORDINATED
C                      UNIVERSAL TIME
C      'XL'     IS THE OBSERVER'S LATITUDE (FOR OPTION 4).
C      'HGT'    IS THE HEIGHT OF THE OBSERVATORY ABOVE SEA LEVEL (FOR 
C                      OPTION 4).
C      'TW'     IS THE ZENITH DISTANCE OF THE SUN AT THE END OF EVENING
C                      TWILIGHT (FOR OPTION 4).
C      'ELMTS'  IS THE ARRAY OF OSCULATING ELEMENTS.
C      'NEL'    IS THE KEY FOR THE LOCATION OF THE CORRECT SET OF   
C                      OSCULATING ELEMENTS FOR THE CURRENT EPHEMERIS
C                      INTERVAL.
C      'TSTRT'  IS THE BEGINNING TIME OF THE CURRENT EPHEMERIS INTERVAL.
C      'TSTOP'  IS THE ENDING TIME OF THE CURRENT EPHEMERIS INTERVAL.   
C      'H'      IS THE STEP SIZE OF THE EPHEMERIS IN JULIAN DAYS.   
C      AND SEVERAL PARAMETERS FOR COMPUTING THE MAGNITUDE ESTIMATES.
C   
      PARAMETER (MAXEL=20)  
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)   
      REAL*4 DAYEP  
      REAL*8 ELMTS(MAXEL,7),FHR(MAXEL)  
      REAL*8 STACOR(3),ACOEF(2),BCOEF(2),PHI(2) 
      REAL*8 PV(MAXEL,3),QV(MAXEL,3)
      REAL*8 RSG(6),RCH(6),RC(6),PUT(4),ROG(6),RSGT(6),OBM(2)   
      REAL*8 RHOV(5),RCOMV(5)   
      REAL*8 SW20, CN20, SI20
      INTEGER II(MAXEL),JJ(MAXEL),KK(MAXEL) 
      CHARACTER*1 FLAG,ISIGN,ISIGN2,AC0,AC1,ACB
      CHARACTER*6 CNAME 
      CHARACTER*7 INQNX, OUTQNX
      CHARACTER*5 BODY  
      CHARACTER*12 FILEIN,FILEOUT
      CHARACTER*80 NAME 
      COMMON/ELM/TT,Q,ECR,PX,PY,PZ,QX,QY,QZ 
      COMMON/TOPO/AU,REM,STACOR,ETMUTC  
      DATA ABSMAG,CAMG,CAMH,GG,ACOEF(1),ACOEF(2),BCOEF(1),BCOEF(2)/ 
     *0.0D0,5.0D0,5.0D0,0.25D0,3.33D0,1.87D0,0.63D0,1.22D0/ 
      DATA TWOPI,RAD,CSE,SNE/6.283185307179586D0,0.0174532925199D0, 
     *0.9174369524418883D0,0.3978811861525251D0/
      DATA EPS20/23.439291111D0/
      DATA DPR/57.2957795130823252D0/   
      DATA B1950/2433282.423D0/ 
      DATA SK/0.01720209895D0/  
C   
      AU=1.4959787066D8 
      REM=6378.140D0
C   
C ... :OPEN INPUT / OUTPUT FILES FOR PROCESSING: ........
      WRITE(*,'(A)') '  YOUR INPUT DATA FILE IS - '
      READ (*,'(A)',END=990)  FILEIN
      WRITE(*,'(A)') '  YOUR OUTPUT DATA FILE IS - '
      READ (*,'(A)',END=990)  FILEOUT
C !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C !!!! CHANGE FILE CARRIAGE CONTROL BASED UPON TYPE OF OUTPUT FILE !!!!
          ACB = ' '
          AC0 = ACB
          AC1 = ACB
C !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
C .......................................................
       OPEN(5,FILE=FILEIN ,FORM='FORMATTED',STATUS='OLD')
       OPEN(6,FILE=FILEOUT,FORM='FORMATTED',STATUS='NEW')
C ....................................................... 
C
C**** READ THE BODY TYPE, EQUINOX, OPTION, AND NUMBER OF SETS OF
C     ELEMENTS TO BE PROCESSED. 
      IBODY=0   
      INEQNX=0
      IQUINX=0  
      READ(5,'(A5,A7,A7)',END=990) BODY, INQNX, OUTQNX 
      IF(BODY.EQ.'COMET') IBODY=1   
      IF(BODY.EQ.'ASTRD') IBODY=2   
      IF(INQNX.EQ.'B1950.0') INEQNX=1
      IF(INQNX.EQ.'J2000.0') INEQNX=2
      IF(OUTQNX.EQ.'B1950.0') IQUINX=1  
      IF(OUTQNX.EQ.'J2000.0') IQUINX=2  
      IF(IBODY.EQ.0) GO TO 990  
      IF(INEQNX.EQ.0) GO TO 990 
      IF(IQUINX.EQ.0) GO TO 990 
      READ(5,*) IOPT,NAPPS  
      WRITE(6,115) AC1, IOPT
  115 FORMAT(A1,41X,'TWO BODY EPHEMERIS GENERATOR - OPTION N0.', I2/)
      IF(IOPT.EQ.1) GO TO 150   
      IF(IOPT.EQ.4) GO TO 135   
C   
C**** IF OPTIONS 2 OR 3 ARE SELECTED READ THE OBSERVATORY COORDINATES   
C     AND THE DIFFERENCE BETWEEN EPHEMERIS TIME AND UNIVERSAL TIME  
C     COORDINATED.  
C   
      READ(5,*) STACOR(1),SPHI,STAHGT,ETMUTC
      WRITE(6,131) AC0 
  131 FORMAT(A1,47X,'OBSERVATORY COORDINATES AND ET-UTC'/20X,  
     *'EAST LONGITUDE(DEG)',3X,'GEODETIC LATITUDE(DEG)',3X, 
     *'HEIGHT ABOVE SEA LEVEL(M)',5X,'ET-UTC(SEC)')  
      WRITE(6,132) STACOR(1),SPHI,STAHGT,ETMUTC 
  132 FORMAT(' ',25X,F10.5,10X,F10.5,10X,F15.1,12X,F12.2/)
      ETMUTC=ETMUTC/86400.D0
      STACOR(1)=STACOR(1)*RAD   
      SPHI=SPHI*RAD 
      CAPS=0.99497418D0-1.67082D-3*DCOS(2.D0*SPHI)+ 
     *2.1D-6*DCOS(4.D0*SPHI)
      CAPC=1.00167997D0-1.68208D-3*DCOS(2.D0*SPHI)+ 
     *2.12D-6*DCOS(4.D0*SPHI)   
      STACOR(2)=(CAPC+0.1568D-6*STAHGT)*DCOS(SPHI)  
      STACOR(3)=(CAPS+0.1568D-6*STAHGT)*DSIN(SPHI)  
      GO TO 150 
C
C**** IF OPTION 4 IS SELECTED READ THE OBSERVER'S LATITUDE (XL), THE
C     HEIGHT OF THE OBSERVER ABOVE SEA LEVEL (HGT), AND THE ZENITH  
C     DISTANCE OF THE SUN AT THE END OF EVENING TWILIGHT(TW).
  135 READ(5,*) XL,HGT,TW   
      HGTK=HGT*1.0D-3
C  
C**** WRITE THE PRINT HEADING FOR THE INPUT ELEMENTS.   
  150 IF(IBODY.EQ.2) GO TO 155  
      WRITE(6,151) AC0, INQNX  
  151 FORMAT(A1,25X,' TABLE OF COMET ORBITAL ELEMENTS AND P,Q VECTORS ',
     *'(',A7,' EQUINOX)'//' ',' YR  MN DY   HR ',5X,'DATE OF PERIHELION'
     *,5X,'Q(AU)',7X,'E',8X,'SOMEGA(DEG)',2X,'LOMEGA(DEG)',6X,'I(DEG)',
     *10X,'P(AU)',7X,'Q(AU)'/27X,'PASSAGE(JD)') 
      GO TO 160 
  155 WRITE(6,156) AC0, INQNX
  156 FORMAT(A1,30X,'TABLE OF MINOR PLANET ORBITAL ELEMENTS AND P,Q VECT
     *ORS ','(',A7,' EQUINOX)'//' ',' YR  MN DY   HR',5X,'EPOCH(J.D.)',
     *5X,'A(AU)',7X,'E',7X,'SOMEGA(DEG)',2X,'LOMEGA(DEG)',3X,'I(DEG)', 
     *6X,'M(DEG)',11X,'P(AU)',7X,'Q(AU)')   
C   
C**** READ AND WRITE THE TABLE OF ORBITAL ELEMENTS. 
  160 DO 180 I=1,NAPPS  
      IF(IBODY.EQ.2) GO TO 165  
      READ(5,*,END=990) (ELMTS(I,J),J=1,6)  
      GO TO 166 
  165 READ(5,*,END=990) (ELMTS(I,J),J=1,7)  
C   
C     COMPUTE THE CALENDAR DATE FROM THE JULIAN DATE.   
C     FLAG='J' OUTPUTS THE CIVIL DATE IN THE JULIAN CALENDAR.   
C     FLAG='G' OUTPUTS THE CIVIL DATE IN THE GREGORIAN CALENDAR.
  166 IF(ELMTS(I,1).LT.2299149.5D0) FLAG='J'
      IF(ELMTS(I,1).GE.2299149.5D0) FLAG='G'
      CALL JDATE(FLAG,II(I),JJ(I),DAYEP,CNAME,ELMTS(I,1))   
      KK(I)=INT(DAYEP)  
      DYINT=FLOAT(KK(I))
      FHR(I)=(DAYEP-DYINT)*24.D0
C   
C**** COMPUTE THE P AND Q ROTATION FACTORS. 
C     IF THE INPUT ELEMENTS ARE REFERRED TO THE J2000.0 SYSTEM COMPUTE
C     THE COMPONENTS OF P,Q FOR PRINTING HERE AND THEN TRANSFORM THE 
C     ELEMENTS TO THE B1950.0 SYSTEM.
      IF(INEQNX.EQ.1) GO TO 168
      EPS20R = EPS20 * RAD
      SNE20  = DSIN(EPS20R)
      CSE20  = DCOS(EPS20R)
      WR  = ELMTS(I,4) * RAD
      OMR = ELMTS(I,5) * RAD
      XIR = ELMTS(I,6) * RAD
      PP = DSIN(WR)*DCOS(XIR)*DCOS(OMR)+DCOS(WR)*DSIN(OMR)
      QQ = DCOS(WR)*DCOS(XIR)*DCOS(OMR)-DSIN(WR)*DSIN(OMR)
      PX = -(DSIN(WR)*DCOS(XIR)*DSIN(OMR)-DCOS(WR)*DCOS(OMR))
      PY = PP*CSE20-SNE20*DSIN(XIR)*DSIN(WR) 
      PZ = CSE20*DSIN(XIR)*DSIN(WR)+PP*SNE20 
      QX = -(DCOS(WR)*DCOS(XIR)*DSIN(OMR)+DSIN(WR)*DCOS(OMR))
      QY = -(SNE20*DSIN(XIR)*DCOS(WR)-QQ*CSE20)  
      QZ = QQ*SNE20+CSE20*DSIN(XIR)*DCOS(WR) 
      WD = ELMTS(I,4)
      OMD= ELMTS(I,5)
      XID= ELMTS(I,6)
      CALL EL2050(ELMTS(I,4),ELMTS(I,5),ELMTS(I,6),DUM4,DUM5,DUM6)
      ELMTS(I,4)=DUM4
      ELMTS(I,5)=DUM5
      ELMTS(I,6)=DUM6
C
C**** COMPUTE THE P,Q COMPONENTS FOR STORAGE FROM ELEMENTS REFERRED TO
C     THE B1950.0 SYSTEM.
  168 WR =ELMTS(I,4)*RAD
      OMR=ELMTS(I,5)*RAD
      XIR=ELMTS(I,6)*RAD
      PP=DSIN(WR)*DCOS(XIR)*DCOS(OMR)+DCOS(WR)*DSIN(OMR)
      QQ=DCOS(WR)*DCOS(XIR)*DCOS(OMR)-DSIN(WR)*DSIN(OMR)
      PV(I,1)=-(DSIN(WR)*DCOS(XIR)*DSIN(OMR)-DCOS(WR)*DCOS(OMR))
      PV(I,2)=PP*CSE-SNE*DSIN(XIR)*DSIN(WR) 
      PV(I,3)=CSE*DSIN(XIR)*DSIN(WR)+PP*SNE 
      QV(I,1)=-(DCOS(WR)*DCOS(XIR)*DSIN(OMR)+DSIN(WR)*DCOS(OMR))
      QV(I,2)=-(SNE*DSIN(XIR)*DCOS(WR)-QQ*CSE)  
      QV(I,3)=QQ*SNE+CSE*DSIN(XIR)*DCOS(WR) 
C
C**** IF THE INPUT ELEMENTS ARE REFERRED TO THE B1950.0 SYSTEM, SET UP
C     THE P,Q COMPONENTS FOR PRINTING FROM THE ARRAYS.
      IF(INEQNX.EQ.2) GO TO 170
      PX = PV(I,1)
      PY = PV(I,2)
      PZ = PV(I,3)
      QX = QV(I,1)
      QY = QV(I,2)
      QZ = QV(I,3)
      WD = ELMTS(I,4)
      OMD= ELMTS(I,5)
      XID= ELMTS(I,6)
C
  170 IF(IBODY.EQ.2) GO TO 175  
      WRITE(6,171) AC0,II(I),JJ(I),KK(I),FHR(I),(ELMTS(I,J),J=1,3), 
     *             WD,OMD,XID,PX,QX,PY,QY,PZ,QZ
  171 FORMAT(A1,I4,2I3,1X,F5.1,6X,F13.5,4X,2F11.7,2X,F11.5,3X,F11.5,   
     *3X,F11.5,3X,' X =',F10.7,2X,F10.7/
     *107X,'Y =',F10.7,2X,F10.7/107X,'Z =',F10.7,2X,F10.7)  
      GO TO 180
C   
  175 WRITE(6,176) AC0,II(I),JJ(I),KK(I),FHR(I),(ELMTS(I,J),J=1,3), 
     *             WD,OMD,XID,ELMTS(I,7),PX,QX,PY,QY,PZ,QZ
  176 FORMAT(A1,I5,2I3,F5.1,2X,F13.5,2F11.7,2(2X,F11.5),F11.5,1X,F11.5,
     *4X,'X =',F10.7,2X,F10.7/107X,'Y =',F10.7,2X,F10.7/107X,'Z =', 
     *F10.7,2X,F10.7)   
      SN=SK/DSQRT(ELMTS(I,2)**3)*DPR
      ELMTS(I,1)=ELMTS(I,1)-ELMTS(I,7)/SN   
      ELMTS(I,2)=ELMTS(I,2)*(1.D0-ELMTS(I,3))   
C
  180 CONTINUE
C
C**** BEGIN MAIN EPHEMERIS COMPUTATION. 
C**** READ COMET INPUT DATA.
  200 CONTINUE  
      IF(IBODY.EQ.2) GO TO 250  
      READ(5,*,END=999) NEL,TSTRT,TSTOP,H,XMT,XTNE,XTNS,XMN,XNNE,XNNS,P9
      READ(5,'(A80)') NAME  
C   
C**** WRITE THE PAGE HEADING FOR THE COMET EPHEMERIS OUTPUT.
      WRITE(6,204) ACB
  204 FORMAT(A1/)
      WRITE(6,205) AC1, OUTQNX, NAME 
  205 FORMAT(A1,10X,'TWO BODY EPHEMERIS ','(',A7,' EQUINOX)',' FOR ',
     *       A80/)
      IF(IOPT.EQ.1) WRITE(6,211) AC0, OUTQNX
  211 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(ET)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',5X,'R', 
     *4X,'THETA',3X,'BETA',2X,'HLONG',2X,'HLAT',2X,'TMAG',2X,'NMAG')
      IF(IOPT.EQ.2) WRITE(6,221) AC0, OUTQNX
  221 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(UT)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',2X,'DELTAD',4X,'R',4X,  
     *'RDOT',3X,'THETA',3X,'BETA',2X,'TMAG',2X,'NMAG')  
       IF(IOPT.EQ.3) WRITE(6,231) AC0, OUTQNX
  231 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(UT)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',5X,'R',4X,'POSANG',3X,  
     *'AZ',4X,'ALT',2X,'TLONG',2X,'TLAT',2X,'THETA',3X,'BETA')  
      IF(IOPT.EQ.4) WRITE(6,241) AC0, OUTQNX
  241 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(ET)',2X,'R.A. ',A7,1X,'DEC.',3X, 
     *' DRA VAR  DDEC ',1X,'DELTA',3X,'R',2X,'POSANG',  
     *1X,'THETA',1X,'BETA',1X,'GLONG',2X,'GLAT',3X,'AZ1',2X,'AL1',3X,   
     *'AZ2',2X,'AL2',2X,'TMAG') 
      GO TO 305 
C   
C**** READ MINOR PLANET INPUT DATA. 
  250 READ(5,*,END=999) NEL,TSTRT,TSTOP,H,ABSMAG,GG,CAMG,CAMH,  
     *(ACOEF(I),I=1,2),(BCOEF(I),I=1,2) 
      READ(5,'(A80)') NAME  
C   
C**** WRITE THE PAGE HEADING FOR THE MINOR PLANET EPHEMERIS OUTPUT. 
      WRITE(6,204) ACB
      WRITE(6,205) AC1, OUTQNX, NAME 
      IF(IOPT.EQ.1) WRITE(6,261) AC0, OUTQNX
  261 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(ET)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',4X,'R', 
     *5X,'THETA',3X,'BETA',2X,'HLONG',2X,'HLAT',2X,'AMAG')  
      IF(IOPT.EQ.2) WRITE(6,271) AC0, OUTQNX
  271 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(UT)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',2X,'DELTAD',4X,'R',4X,  
     *'RDOT',3X,'THETA',3X,'BETA',3X,'AMAG')
      IF(IOPT.EQ.3) WRITE(6,281) AC0, OUTQNX
  281 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(UT)',3X,'R.A. ',A7,1X,'DEC.',6X, 
     *'R.A.',2X,'DATE',2X,'DEC.',4X,'DELTA',5X,'R',6X,  
     *'AZ',4X,'ALT',2X,'TLONG',2X,'TLAT',2X,'THETA',3X,'BETA')  
      IF(IOPT.EQ.4) WRITE(6,291) AC0, OUTQNX
  291 FORMAT(A1,' YR',2X,'MN', 
     *1X,'DY',2X,'HR',3X,'J.D.(ET)',3X,'R.A.',A7,1X,'DEC.',3X,  
     *' DRA VAR  DDEC ',1X,'DELTA',3X,'R',2X,   
     *1X,'THETA',2X,'BETA',1X,'GLONG',2X,'GLAT',3X,'AZ1',2X,'AL1',3X,   
     *'AZ2',2X,'AL2',2X,'AMAG') 
C   
C**** SET UP COMMON BLOCK 'ELM' FOR THIS SET OF ELEMENTS.   
  305 TT=ELMTS(NEL,1)   
      Q=ELMTS(NEL,2)
      ECR=ELMTS(NEL,3)  
      PX=PV(NEL,1)  
      PY=PV(NEL,2)  
      PZ=PV(NEL,3)  
      QX=QV(NEL,1)  
      QY=QV(NEL,2)  
      QZ=QV(NEL,3)  
C   
C**** NTRIG=0 SECTION - 
C**** COMPUTE THE HELIOCENTRIC COORDINATES OF THE COMET, THE GEOCENTRIC 
C**** SOLAR COORDINATES, AND THE HELIOCENTRIC  COMET DISTANCE.  
C     IF IOPT=1, ALSO COMPUTE THE GEOCENTRIC COMET DISTANCE, AND APPLY  
C              THE LIGHT TIME CORRECTION.   
C     IF IOPT=2, COMPUTE THE TOPOCENTRIC COMET DISTANCE, AND APPLY THE  
C                LIGHT TIME CORRECTION AND THE ELLIPTIC PORTION OF THE  
C               ANNUAL PART OF THE STELLAR ABERRATION.  
C   
      TOBS=TSTRT
  310 CONTINUE  
      NTRIG=0   
      IF(IOPT.EQ.2.OR.IOPT.EQ.3) GO TO 320  
      CALL APPAD1(IOPT,NTRIG,TOBS,PUT,RSG,RCH,RC,POSANG,IQUINX) 
      GO TO 330 
  320 CALL APPAD2(IOPT,NTRIG,TOBS,RU,ECLOBL,PUT,RSG,RCH,RC,ROG, 
     *POSANG,IQUINX)
C   
C**** COMPUTE THE EPHEMERIS ALPHA, DELTA, AND CHANGE TO HOURS, MINUTES, 
C     AND DEGREES, ARCMINUTES.  
  330 RHO=DSQRT(RC(1)**2+RC(2)**2+RC(3)**2) 
      DEC= DASIN(RC(3)/RHO) 
      RA=DATAN2(RC(2),RC(1))
      IF(RA.LT.0.D0) RA=RA+TWOPI
      CALL ARGCHG(RA,DEC,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN)
C   
C**** COMPUTE THE PHASE (SUN-OBJECT-EARTH) ANGLE (BETA).
      GRHO=DSQRT((RSG(1)+RCH(1))**2+(RSG(2)+RCH(2))**2+ 
     *(RSG(3)+RCH(3))**2)   
      RCOM=DSQRT(RCH(1)*RCH(1)+RCH(2)*RCH(2)+RCH(3)*RCH(3)) 
      RSUNSQ=RSG(1)*RSG(1)+RSG(2)*RSG(2)+RSG(3)*RSG(3)  
      BETA=DACOS((RCOM*RCOM+GRHO*GRHO-RSUNSQ)/(2.D0*RCOM*GRHO))/RAD 
C   
C**** COMPUTE APPARENT MAGNITUDES OF OBJECT.
      IF(IBODY.EQ.2) GO TO 333  
      XMAG =XMT+XTNE*DLOG10(RHO)+XTNS*DLOG10(RCOM)  
      XMAG2=XMN+XNNE*DLOG10(RHO)+XNNS*DLOG10(RCOM)+P9*BETA  
      GO TO 338 
  333 DO 335 I=1,2  
  335 PHI(I)=DEXP(-ACOEF(I)*(DTAN(BETA*RAD/2.D0))**BCOEF(I))
      AMAG=ABSMAG+CAMG*DLOG10(RHO)+CAMH*DLOG10(RCOM)
     *-2.5D0*DLOG10((1.D0-GG)*PHI(1)+GG*PHI(2)) 
C   
C**** COMPUTE THE ELONGATION (SUN-EARTH-OBJECT) ANGLE (THETA).  
  338 RSUN=DSQRT(RSUNSQ)
      THETA= DACOS((GRHO*GRHO+RSUNSQ-RCOM*RCOM)/(2.D0*GRHO*RSUN))/RAD   
      IF(IOPT.NE.1) GO TO 340   
C   
C**** COMPUTE THE HELIOCENTRIC ECLIPTIC LONGITUDE AND LATITUDE. 
      Y1= RCH(2)*CSE+RCH(3)*SNE 
      Z1=-RCH(2)*SNE+RCH(3)*CSE 
      RP=DSQRT(RCH(1)*RCH(1)+Y1*Y1) 
      RE=DSQRT(RCH(1)*RCH(1)+Y1*Y1+Z1*Z1)   
      BBETA=DASIN(Z1/RE)/RAD
      XLAMDA=DATAN2(Y1/RP,RCH(1)/RP)/RAD
      IF(XLAMDA.LT.0.D0)XLAMDA=XLAMDA+360.D0
  340 IF(IOPT.EQ.3) GO TO 350   
      GO TO 410 
C   
C**** COMPUTE THE TOPOCENTRIC ECLIPTIC LONGITUDE AND LATITUDE.  
  350 YY1=RC(2)*CSE+RC(3)*SNE   
      ZZ1=-RC(2)*SNE+RC(3)*CSE  
      RRP=DSQRT(RC(1)*RC(1)+YY1*YY1)
      RRE=DSQRT(RC(1)*RC(1)+YY1*YY1+ZZ1*ZZ1)
      TOPLAT=DASIN(ZZ1/RRE)/RAD 
      TOPLNG=DATAN2(YY1/RRP,RC(1)/RRP)/RAD  
      IF(TOPLNG.LT.0.D0) TOPLNG=TOPLNG+360.D0   
C   
C**** NTRIG=1 SECTION - 
C**** APPLY PRECESSION, NUTATION, AND THE   
C**** CIRCULAR PORTION OF THE ANNUAL PART AND THE DIURNAL PART OF THE   
C**** STELLAR ABERRATION TO THE TOPOCENTRIC COORDINATES.
  410 NTRIG=1   
      IF(IOPT.EQ.2.OR.IOPT.EQ.3) GO TO 420  
      CALL APPAD1(IOPT,NTRIG,TOBS,PUT,RSG,RCH,RC,POSANG,IQUINX) 
      GO TO 430 
  420 CALL APPAD2(IOPT,NTRIG,TOBS,RU,ECLOBL,PUT,RSG,RCH,RC,ROG, 
     *POSANG,IQUINX)
C   
C**** COMPUTE APPARENT RIGHT ASCENSION AND DECLINATION. 
  430 RHO=DSQRT(RC(1)*RC(1)+RC(2)*RC(2)+RC(3)*RC(3))
      DEC2=DASIN(RC(3)/RHO) 
      RA2=DATAN2(RC(2),RC(1))   
      IF(RA2.LT.0.D0) RA2=RA2+TWOPI 
      CALL ARGCHG(RA2,DEC2,IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2)   
C   
C**** CONVERT THE JULIAN DATE INTO A CALENDAR DATE. 
      IF(TOBS.LT.2299149.5D0) FLAG='J'  
      IF(TOBS.GE.2299149.5D0) FLAG='G'  
      CALL JDATE(FLAG,IYR,JMON,DAYEP,CNAME,TOBS)
      KDAY=INT(DAYEP)   
      DYINT=FLOAT(KDAY) 
      FQR=(DAYEP-DYINT)*24.D0   
      IF(IOPT.EQ.2) GO TO 725   
      IF(IOPT.EQ.3) GO TO 820   
      IF(IOPT.EQ.4) GO TO 840   
C   
C**** PRINT OPTION 1 RESULTS.   
      IF(IBODY.EQ.2) GO TO 630  
      WRITE(6,621)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCOM,THETA, 
     *BETA,XLAMDA,BBETA,XMAG,XMAG2  
  621 FORMAT(' ',I4,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1, 
     *I2,F6.2,F8.4,F7.4,2(1X,F6.1),F7.1,3F6.1)
      GO TO 880 
  630 WRITE(6,631)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCOM,THETA, 
     *BETA,XLAMDA,BBETA,AMAG
  631 FORMAT(' ',I4,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1, 
     *I2,F6.2,F8.4,F7.4,2(1X,F6.1),F7.1,2F6.1) 
      GO TO 880 
C   
C   COMPUTE THE OBJECT-OBSERVER AND OBJECT-SUN RELATIVE VELOCITIES. 
  725 HH=1.D0/24.D0
      TM=TOBS-2.D0*HH   
      DO 729 K=1,5  
      CALL APPAD2(IOPT,0,TM,RU,ECLOBL,PUT,RSG,RCH,RC,ROG,POSANG,IQUINX) 
      RHOV(K)=DSQRT(RC(1)*RC(1)+RC(2)*RC(2)+RC(3)*RC(3))
      RCOMV(K)=DSQRT(RCH(1)*RCH(1)+RCH(2)*RCH(2)+RCH(3)*RCH(3)) 
      TM=TM+HH  
  729 CONTINUE  
      CALL VELCTY(TOBS,HH,RHOV,RCD) 
      CALL VELCTY(TOBS,HH,RCOMV,RCOMD)  
      RCD=RCD*AU/86400.D0   
      RCOMD=RCOMD*AU/86400.D0   
C   
C**** PRINT OPTION 2 RESULTS.   
      IF(IBODY.EQ.2) GO TO 815  
      WRITE(6,810)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCD,RCOM,RCOMD, 
     *THETA,BETA,XMAG,XMAG2 
  810 FORMAT(I5,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1,I2,  
     *F6.2,F8.4,1X,F6.1,F7.4,F7.1,2(1X,F6.1),2F6.1)
      GO TO 880 
  815 WRITE(6,816)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCD,RCOM,RCOMD, 
     *THETA,BETA,AMAG   
  816 FORMAT(I5,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1,I2,  
     *F6.2,F8.4,1X,F6.1,F7.4,F7.1,3(1X,F6.1))
      GO TO 880 
C   
C**** COMPUTE TOPOCENTRIC ALTITUDE AND AZIMUTH. 
  820 CALL AZALT(RU,RA2,DEC2,AZ,ALT)
C   
C**** PRINT OPTION 3 RESULTS.   
      ALT=ALT*DPR   
      AZ=AZ*DPR 
      IF(IBODY.EQ.2) GO TO 835  
      POSANG=POSANG*DPR 
      WRITE(6,830)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCOM,POSANG,AZ,ALT, 
     *TOPLNG,TOPLAT,THETA,BETA  
  830 FORMAT(I5,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1,I2,  
     *F6.2,F8.4,1X,F7.4,1X,F5.1,2(2X,F5.1,F6.1),2(1X,F6.1)) 
      GO TO 880 
  835 WRITE(6,836)IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,DECMIN,
     *IRAHR2,RAMIN2,ISIGN2,IDCD2,DECMN2,RHO,RCOM,AZ,ALT,
     *TOPLNG,TOPLAT,THETA,BETA  
  836 FORMAT(I5,2I3,F5.1,F11.1,I3,F7.3,2X,A1,I2,F6.2,I4,F7.3,2X,A1,I2,  
     XF6.2,F8.4,1X,F7.4,1X,2(1X,F5.1,F6.1),2(1X,F6.1))  
      GO TO 880 
C   
C**** COMPUTE GEOCENTRIC ECLIPTIC LONGITUDE AND LATITUDE
C     RELATIVE TO THE TRUE EQUINOX OF DATE. 
  840 Y1=RC(2)*CSE+RC(3)*SNE
      Z1=-RC(2)*SNE+RC(3)*CSE   
      RP=DSQRT(RC(1)*RC(1)+Y1*Y1)   
      RE=DSQRT(RC(1)*RC(1)+Y1*Y1+Z1*Z1) 
      GLAT=DASIN(Z1/RE)/RAD 
      GLONG=DATAN2(Y1/RP,RC(1)/RP)/RAD  
      IF(GLONG.LT.0.D0) GLONG=GLONG+360.D0  
C   
C**** FOR OPTION 4, COMPUTE AZIMUTH AND ALTITUDE AT 
C     BEGINNING OF MORNING TWILIGHT AND END OF EVENING TWILIGHT.
C     PRECESS AND NUTATE THE GEOCENTRIC SOLAR COORDINATES TO THE
C     APPARENT EQUATOR AND EQUINOX OF DATE. 
      DO 850 I=1,6  
  850 RSGT(I)=RSG(I)
      IF(IQUINX.EQ.2) GO TO 851
      CALL PRECES(B1950,TOBS,.TRUE.,RSGT)   
      GO TO 852
  851 CALL PF2000(TOBS,RSGT)
  852 CALL NUTATE(TOBS,PUT,OBM,.TRUE.,RSGT) 
C     COMPUTE RA AND DEC OF SUN (AS,DS).
      AS=DATAN2(RSGT(2),RSGT(1))
      IF(AS.LT.0.D0) AS=AS+TWOPI
      SMAG=DSQRT(RSGT(1)**2+RSGT(2)**2+RSGT(3)**2)  
      DS=DASIN(RSGT(3)/SMAG)
C     COMPUTE RA AND DEC OF COMET (AC,DC).  
      AC=RA2
      DC=DEC2   
      XL=XL*RAD 
      TW=TW*RAD 
C     COMPUTE LHA OF END OF TWILIGHT (BET1).
      BT1=(DCOS(TW)-DSIN(XL)*DSIN(DS))/(DCOS(XL)*DCOS(DS))  
      BET1=DACOS(BT1)   
C     COMPUTE LST OF END OF EVENING TWILIGHT (EET). 
      EET=BET1+AS   
C     COMPUTE LST OF BEGINNING MORNING TWILIGHT (BMT). BET1 IS INTERVAL 
C     (IN S.T.) BETWEEN MERIDIAN CROSSING AND END OF TWILIGHT.  
      BMT=EET-2.D0*BET1 
      CALL AZEL(BMT,AC,DC,GRHO,XL,HGTK,AZMT,ELMT)
      CALL AZEL(EET,AC,DC,GRHO,XL,HGTK,AZET,ELET)
      XL=XL/RAD 
      TW=TW/RAD 
C   
C**** PRINT OPTION 4 RESULTS.   
      CALL VRLINE(TOBS,RSG,RA,DEC,DRA,DDEC,IQUINX)  
      IF(IBODY.EQ.2) GO TO 865  
      POSANG=POSANG*DPR 
      WRITE(6,860) IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,  
     *DECMIN,DRA,DDEC,RHO,RCOM,POSANG,  
     *THETA,BETA,GLONG,GLAT,AZMT,ELMT,AZET,ELET,XMAG
  860 FORMAT(' ',I4,2I3,F5.1,F11.1,1X,I3,F6.2,1X,A1,I2,F5.1,
     *2X,F7.2,1X,F6.1,2X,2F5.2,3F6.1,2(1X,F5.1),2(1X,2F5.1),F6.1)   
      GO TO 880 
  865 WRITE(6,866) IYR,JMON,KDAY,FQR,TOBS,IRAHR,RAMIN,ISIGN,IDCDG,  
     *DECMIN,DRA,DDEC,RHO,RCOM, 
     *THETA,BETA,GLONG,GLAT,AZMT,ELMT,AZET,ELET,AMAG
  866 FORMAT(' ',I4,2I3,F5.1,F11.1,1X,I3,F6.2,1X,A1,I2,F5.1,
     *2X,F7.2,1X,F6.1,2X,2F5.2,1X,2F6.1,2(1X,F5.1),2(1X,2F5.1),F6.1)
C   
C**** INCREMENT THE OBSERVATION TIME AND RETURN TO PROCESS A NEW POINT. 
  880 TOBS=TOBS+H   
      IF(TOBS.LE.TSTOP) GO TO 310   
C   
C**** REWRITE THE ELEMENTS USED TO COMPUTE THE EPHEMERIS.   
      IF(IBODY.EQ.2) GO TO 904  
      IF(INEQNX.EQ.1) GO TO 901
      CALL EL5020(ELMTS(NEL,4),ELMTS(NEL,5),ELMTS(NEL,6),SW20,CN20,SI20)
      WRITE(6,902) AC0,INQNX,II(NEL),JJ(NEL),KK(NEL),FHR(NEL),
     *             (ELMTS(NEL,J),J=1,3),SW20,CN20,SI20
      GO TO 907
  901 WRITE(6,902) AC0,INQNX,II(NEL),JJ(NEL),KK(NEL),FHR(NEL),
     *             (ELMTS(NEL,J),J=1,6)  
  902 FORMAT(A1/,22X,'THE ABOVE COMET EPHEMERIS IS BASED UPON THE FOLLOW
     *ING ECLIPTIC ORBITAL ELEMENTS','(',A7,'):'/23X,' YR  MN DY  HR',  
     *7X,'J.D.',10X,'Q(AU)',7X,'E',6X,'SOMEGA(DEG)',2X,'LOMEGA(DEG)',3X,
     *'I(DEG)'/22X,I5,2I3,F5.1,2X,F13.5,2F11.7,3(1X,F11.5) /)   
      GO TO 907 
  904 EL2=ELMTS(NEL,2)/(1.D0-ELMTS(NEL,3))  
      SN=SK/DSQRT(EL2**3)*DPR
      EL1=ELMTS(NEL,1)+ELMTS(NEL,7)/SN  
      IF(INEQNX.EQ.1) GO TO 905
      CALL EL5020(ELMTS(NEL,4),ELMTS(NEL,5),ELMTS(NEL,6),SW20,CN20,SI20)
      WRITE(6,906) AC0,INQNX,II(NEL),JJ(NEL),KK(NEL),FHR(NEL),EL1,EL2,
     *             ELMTS(NEL,3),SW20,CN20,SI20,ELMTS(NEL,7)
      GO TO 907
  905 WRITE(6,906) AC0,INQNX,II(NEL),JJ(NEL),KK(NEL),FHR(NEL),EL1,EL2,
     *             (ELMTS(NEL,J),J=3,7)  
  906 FORMAT(A1/,15X,'THE ABOVE MINOR PLANET EPHEMERIS IS BASED UPON THE
     * FOLLOWING ECLIPTIC ORBITAL ELEMENTS','(',A7,'):'/10X,
     *' YR  MN DY  HR',5X,'EPOCH(JD)',  
     *11X,'A(AU)',8X,'E',6X,'SOMEGA(DEG)',3X,'NODE(DEG)',5X,
     *'I(DEG)',6X,'M(DEG)'/10X,I5,2I3,F5.1,2X,F13.5,3X,2F11.7,  
     *1X,F12.5,1X,3F12.5/)   
C   
C**** WRITE THE EXPLANATION PARAGRAPH.  
  907 WRITE(6,908) AC0,IOPT 
  908 FORMAT(A1,'EXPLANATION OF SYMBOLS FOR OPTION ',I1,' :')  
      IF(IOPT.EQ.1) WRITE(6,911) AC0,OUTQNX,OUTQNX
  911 FORMAT(A1,'J.D. = JULIAN DATE(EPHEMERIS TIME).'/
     *' R.A. AND DEC. - ',A7,' = GEOCENTRIC RIGHT ASCENSION AND DECLINAT
     *ON REFERRED TO THE MEAN EQUATOR AND EQUINOX OF ',A7,'.'/  
     *' R.A. AND DEC. - DATE = GEOCENTRIC RIGHT ASCENSION AND DECLINATIO
     *N REFERRED TO THE TRUE EQUATOR AND EQUINOX OF DATE.'/24X,
     *'R.A. IN HOURS AND TIME MINUTES, DEC. IN DEGREES AND ARC MINUTES.'
     */' DELTA = GEOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.'/
     *' R = HELIOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.'/
     *' THETA = SUN-EARTH-OBJECT ANGLE, IN DEGREES.'/  
     *' BETA = SUN-OBJECT-EARTH ANGLE, IN DEGREES.'/   
     *' HLONG, HLAT = HELIOCENTRIC ECLIPTIC LONGITUDE AND LATITUDE, IN',
     *' DEGREES.')   
C   
      IF(IOPT.EQ.2) WRITE(6,921) AC0,OUTQNX,OUTQNX
  921 FORMAT(A1,'J.D.= JULIAN DATE(UNIVERSAL TIME).'/   
     *' R.A. AND DEC. - ',A7,' = TOPOCENTRIC RIGHT ASCENSION AND ', 
     *'DECLINATION REFERRED TO THE MEAN EQUATOR AND EQUINOX OF ',A7,'.'/
     *' R.A. AND DEC. - DATE = TOPOCENTRIC RIGHT ASCENSION AND DECLINATI
     *ON REFERRED TO THE TRUE EQUATOR AND EQUINOX OF DATE.'/24X,
     *'R.A. IN HOURS AND TIME MINUTES, DEC. IN DEGREES AND ARC MINUTES.'
     */' DELTA = TOPOCENTRIC DISTANCE OF OBJECT IN ASTRONOMICAL UNITS.'/
     *' DELTAD = D(DELTA)/DT, IN KM/SEC.'/   
     *' R = HELIOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.'/
     *' RDOT = D(R)/DT, IN KM/SEC.'/ 
     *' THETA = SUN-EARTH-OBJECT ANGLE, IN DEGREES.'/  
     *' BETA = SUN-OBJECT-EARTH ANGLE, IN DEGREES.')   
C   
      IF(IOPT.EQ.3) WRITE(6,931) AC0,OUTQNX,OUTQNX
  931 FORMAT(A1,'J.D.= JULIAN DATE(UNIVERSAL TIME).'/   
     *' R.A. AND DEC. - ',A7,' = TOPOCENTRIC RIGHT ASCENSION AND ', 
     *'DECLINATION REFERRED TO THE MEAN EQUATOR AND EQUINOX OF ',A7,'.'/
     *' R.A. AND DEC. - DATE = TOPOCENTRIC RIGHT ASCENSION AND DECLINATI
     *ON REFERRED TO THE TRUE EQUATOR AND EQUINOX OF DATE.'/24X,
     *'R.A. IN HOURS AND TIME MINUTES, DEC. IN DEGREES AND ARC MINUTES.'
     */' DELTA = TOPOCENTRIC DISTANCE OF OBJECT IN ASTRONOMICAL UNITS.'/
     *' R = HELIOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.')
      IF(IOPT.EQ.3.AND.IBODY.EQ.1) WRITE(6,935)
  935 FORMAT(' ','POSANG = POSITION ANGLE (EAST OF NORTH) OF EXTENDED ',
     *'HELIOCENTRIC RADIUS VECTOR, IN DEGREES.')
      IF (IOPT.EQ.3) WRITE(6,937)
  937 FORMAT(' ', 'AZ, ALT = AZIMUTH AND ALTITUDE OF OBJECT, IN ',
     *'DEGREES.'/' TLONG, TLAT = TOPOCENTRIC ECLIPTIC LONGITUDE AND ',
     *'LATITUDE OF OBJECT, IN DEGREES.'/  
     *' THETA = SUN-EARTH-OBJECT ANGLE, IN DEGREES.'/  
     *' BETA = SUN-OBJECT-EARTH ANGLE, IN DEGREES.')   
C   
      IF(IOPT.EQ.4) WRITE(6,941) AC0,OUTQNX,OUTQNX,OUTQNX
  941 FORMAT(A1,'J.D. = JULIAN DATE(EPHEMERIS TIME).'/
     *' R.A. AND DEC. - ',A7,' = GEOCENTRIC RIGHT ASCENSION AND DECLINAT
     *ION REFERRED TO THE MEAN EQUATOR AND EQUINOX OF ',A7,'.'/24X,'R.A.
     * IN HOURS AND TIME MINUTES, DEC. IN DEGREES AND ARC MINUTES.',/   
     *' DRA AND DDEC - VAR. = VARIATION BY ONE DAY OF POSITION OF ',
     *'OBJECT, TRANSLATED INTO VARIATIONS IN RIGHT ASCENSION '/24X,  
     *'AND DECLINATION, REFERRED TO THE MEAN EQUATOR AND EQUINOX ',
     *'OF ',A7,'.'/24X, 
     *'DRA IN TIME MINUTES, DDEC IN ARC MINUTES.'/  
     *' DELTA = GEOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.'/ 
     *' R = HELIOCENTRIC DISTANCE OF OBJECT, IN ASTRONOMICAL UNITS.')   
      IF(IOPT.EQ.4.AND.IBODY.EQ.1) WRITE(6,943)
  943 FORMAT(' ','POSANG = POSITION ANGLE (EAST OF NORTH) OF EXTENDED', 
     *' HELIOCENTRIC RADIUS VECTOR, IN DEGREES.')   
      IF(IOPT.EQ.4) WRITE(6,945) XL,HGT,TW  
  945 FORMAT(' ','THETA = SUN-EARTH-OBJECT ANGLE, IN DEGREES.'/   
     *' BETA = SUN-OBJECT-EARTH ANGLE, IN DEGREES.',/   
     *' GLONG,GLAT = GEOCENTRIC ECLIPTIC LONGITUDE AND LATITUDE REFERRED
     * TO THE TRUE EQUINOX OF DATE, IN DEGREES.',/  
     *' AZ1,AL1 AND AZ2,AL2 = AZIMUTH AND ALTITUDE OF THE OBJECT AT INIT
     *IATION OF MORNING TWILIGHT AND END OF EVENING TWILIGHT,'/ 
     *22X,' RESPECTIVELY, FOR AN OBSERVER AT',F6.1,' DEGREES LATITUDE AN
     *D',F6.1,' METERS ABOVE SEA LEVEL.',/22X,' TWILIGHT IS ',
     *'DEFINED AS OCCURRING WHEN THE ZENITH DISTANCE OF THE SUN IS'
     *,F6.1,' DEGREES.'/22X,' AZIMUTH IS MEASURED EAST OF NORTH.')  
C   
C****  WRITE MAGNITUDES.
      IF(IOPT.EQ.3) GO TO 200   
      IF(IBODY.EQ.2) GO TO 960  
      WRITE(6,952) XMT,XTNE,XTNS
  952 FORMAT(' ','TMAG = TOTAL MAGNITUDE   = ',F4.1,' + ',F5.2, 
     *'*LOG10(DELTA) + ',F5.2,'*LOG10(R).') 
      IF(IOPT.EQ.4) GO TO 200   
      WRITE(6,954) XMN,XNNE,XNNS,P9 
  954 FORMAT(' ','NMAG = NUCLEAR MAGNITUDE = ',F4.1,' + ',F5.2, 
     *'*LOG10(DELTA) + ',F5.2,'*LOG10(R) + ',F4.2,'*BETA.') 
      GO TO 200 
  960 WRITE(6,961) ABSMAG,GG,CAMG,CAMH,(ACOEF(I),BCOEF(I),I=1,2)
  961 FORMAT(' ','AMAG = APPARENT MAGNITUDE = ABSMAG + ',   
     *'COEFG*LOG10(DELTA) + COEFH*LOG10(R)',
     *' - 2.5*LOG10((1.0-G)*PHI(1) + G*PHI(2))'/30X,
     *'WHERE: PHI(I)=EXP(-A(I)*(TAN(BETA/2))**B(I)), I=1,2 '/40X,   
     *' AND:  ABSMAG = ',F5.2,9X,'G = ',F5.2/47X,   
     *' COEFG = ',F5.2,5X,'COEFH = ',F5.2/49X,  
     *'A(1) = ',F5.2,6X,'B(1) = ',F5.2/49X, 
     *'A(2) = ',F5.2,6X,'B(2) = ',F5.2) 
      GO TO 200 
C   
  990 WRITE(6,991) AC0 
  991 FORMAT(A1,'ERROR IN READING INPUT DATA') 
  999 STOP  
      END   
      SUBROUTINE ARGCHG(RA,DEC,IH,AM, ISGN,ID,AMIN) 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)   
      CHARACTER*1 ISGN,IMINUS,IPLUS 
      DATA IPLUS,IMINUS /'+','-'/   
      DATA RAD/0.0174532925199D0/   
C****                                                                      33100    
C**** KEY .NE. -1 ---- HOURS AND DEGREES TO RADIANS                        33200    
C**** KEY .EQ. -1 ---- RADIANS TO HOURS AND DEGREES                        33300    
C****                                                                      33400    
      KEY=-1
      IF(KEY.EQ.-1) GO TO 10                                               33500    
      H=IH                                                                 33600    
      D=ID                                                                 33700    
      RA=15.D0*(H+AM/6.D1)* RAD                                            33800    
      DEC=(D+AMIN/6.D1)*RAD                                                33900    
      IF(ISGN.EQ.'1') DEC=-DEC                                             34000    
      RETURN                                                               34100    
   10 HOURS=RA/RAD/15.D0                                                   34200    
      HOURS=DMOD(HOURS,24.D0)                                              34300    
      IH=HOURS                                                             34400    
      AM=(HOURS-IH)*6.D1                                                   34500    
      AM=AM+1.D-6                                                          34600    
      IF(AM.LT.6.D1) GO TO 12                                              34700    
      AM=AM-6.D1                                                           34800    
      IH=IH+1                                                              34900    
   12 IF(IH.GE.24) IH=IH-24                                                35000    
      IF(DEC) 15,20,20                                                     35100    
   15 ISGN=IMINUS   
      GO TO 25                                                             35300    
   20 ISGN=IPLUS
   25 DEG=DABS(DEC)/RAD                                                    35500    
      ID=DEG                                                               35600    
      AMIN=(DEG-ID)*6.D1                                                   35700    
      RETURN                                                               35800    
      END                                                                  35900    
      SUBROUTINE NUTATE(DJ,PUT,OBM,FRWD,X)  
C   
C     FRWD = TRUE IMPLIES NUTATION FROM 1950,  = FALSE IMPLIES TO 1950  
C   
C     REF. - MELBOURNE, W.G., ET.AL., CONSTANTS AND RELATED INFORMATION 
C     FOR ASTRODYNAMIC CALCULATIONS, 1968, JPL TR 32-1306, 1968, P. 9.  
C   
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)   
      DIMENSION OBM(2),OBT(2),DPSI(2),X(6),PUT(4)   
      LOGICAL FRWD  
      DATA SPR/206264.8062D0/   
      T=(DJ-2433282.5D0)/36525.D0   
C----  CONSTANTS DOCUMENT   TR32-1306  1968  PG. 9  
      OBM(1)=(84404.84D0+T*(-46.850D0+T*(-0.0034D0+T*0.0018D0)))/SPR    
      OBM(2)=(-46.850D0-0.0068D0*T+0.0054D0*T*T)/(SPR*36525.D0) 
      DPSI(1)=PUT(1)    
      DPSI(2)=PUT(3)    
      OBT(1)=OBM(1)+PUT(2)  
      OBT(2)=OBM(2)+PUT(4)  
      IF(.NOT. FRWD) GO TO 1
      CALL ROTAT6(X,OBM,+1,X)   
      CALL ROTAT6(X,DPSI,-3,X)  
      CALL ROTAT6(X,OBT,-1,X)   
      RETURN
   1  CALL ROTAT6(X,OBT,+1,X)   
      CALL ROTAT6(X,DPSI,+3,X)  
      CALL ROTAT6(X,OBM,-1,X)   
      RETURN
      END   
      SUBROUTINE PRECES(TZ,TF,FRWD,X)   
C ----  REFERENCE  -  LIESKE  JPL TECH REPORT  TR32-1044    
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)   
      DIMENSION ZE(2),TH(2),Z(2),X(3)   
      DOUBLE PRECISION JD1900   
      LOGICAL FRWD  
      DATA JD1900/2415020.313516463D0/  
      DATA TCENT/36524.219879D0/    
      DATA SPR/206264.8062D0/   
      SCALE=SPR*TCENT   
      IF(TZ .EQ. TZZ) GO TO 2   
      T1=(TZ-JD1900)/TCENT  
      TZZ=TZ
      P1=2304.253D0+T1*(1.3972D0+T1*0.125D-3)   
      P2=0.3023D0-0.211D-3*T1   
      P3=0.0180D0   
      Q1=P1 
      Q2=1.0949D0+0.460D-3*T1   
      Q3=0.0183D0   
      R1=2004.684D0+T1*(-.8532D0-T1*0.317D-3)   
      R2=-0.4266D0-0.320D-3*T1  
      R3=-0.0418D0  
   2  T=(TF-TZ)/TCENT   
      ZE(1)=T*(P1+T*(P2+T*P3))/SPR  
      ZE(2)=(P1+T*(2.D0*P2+T*3.D0*P3))/SCALE    
      Z (1)=T*(Q1+T*(Q2+T*Q3))/SPR  
      Z (2)=(Q1+T*(2.D0*Q2+T*3.D0*Q3))/SCALE    
      TH(1)=T*(R1+T*(R2+T*R3))/SPR  
      TH(2)=(R1+T*(2.D0*R2+T*3.D0*R3))/SCALE    
      IF(FRWD) GO TO 1  
C ----  HERE FOR PRECESSING FROM TF TO TZ   
      CALL ROTAT6(X,Z ,+3,X)
      CALL ROTAT6(X,TH,-2,X)
      CALL ROTAT6(X,ZE,+3,X)
      RETURN
C ----  HERE FOR PRECESSING FROM TZ TO TF   
   1  CALL ROTAT6(X,ZE,-3,X)
      CALL ROTAT6(X,TH,+2,X)
      CALL ROTAT6(X,Z ,-3,X)
      RETURN
      END   
      SUBROUTINE PRECSJ(TJD,VEC,PMAT,PMATDT)                            PSJ00100    
C--VECTOR FORMULATION OF PRECESSION MATRIX                              PSJ00200    
C--PRECESS FROM EQUINOX AND EQUATOR OF J2000 TO EQUINOX AND EQUATOR OF TPSJ00300    
C--FORMULATION                                                          PSJ00400    
C--    RB(I)=SUM(J) PMAT(I,J)*RA(J)  FOR I=1,3                          PSJ00500    
C--WHERE RA IS POSITION ON EQUATOR AND EQUINOX A                        PSJ00600    
C--AND   RB IS POSITION ON EQUATOR AND EQUINOX B                        PSJ00700    
C--AND WHERE PMAT IS PRECESSION MATRIX FROM A TO B                      PSJ00800    
      DOUBLE PRECISION VEC(6),PMAT(3,3),PMATDT(3,3)                     PSJ00900    
      DOUBLE PRECISION CXI,SXI,CT,ST,CZ,SZ                              PSJ01000    
C--PRECESS FROM J2000.0 TO EPOCH B (TJD) EQUATOR AND EQUINOX            PSJ01100    
C--VEC(1)= ZETA IN RADIANS                                              PSJ01200    
C--VEC(2)= Z IN RADIANS                                                 PSJ01300    
C--VEC(3)= THETA IN RADIANS                                             PSJ01400    
C--VEC(4)= ZETA DOT IN RADIANS PER DAY                                  PSJ01500    
C--VEC(5)= Z DOT IN RADIANS PER DAY                                     PSJ01600    
C--VEC(6)= THETA DOT IN RADIANS PER DAY                                 PSJ01700    
C-                                                                      PSJ01800    
C--BASED UPON IAU (1976) ASTRONOMICAL CONSTANTS                         PSJ01900    
C--SEE LIESKE, LEDERLE, FRICKE, MORANDO, ASTRON. ASTROPHYS. 58, 1-16 (19PSJ02000    
C--CODED BY JAY LIESKE 5/78                                             PSJ02100    
      DOUBLE PRECISION TJD,ZETA1(3),Z1(3),THETA1(3),PI,FAC,TAU          PSJ02200    
      LOGICAL FIRST                                                     PSJ02300    
      DATA FIRST/.TRUE./
      DATA ZETA1/2306.2181D0,.30188D0,.017998D0/                        PSJ02400    
      DATA Z1/2306.2181D0,1.09468D0,.018203D0/                          PSJ02500    
      DATA THETA1/2004.3109D0,-.42665D0,-.041833D0/                     PSJ02600    
      DATA PI/3.14159265358979324D0/                                    PSJ02700    
      IF(.NOT.FIRST) GO TO 2                                            PSJ02800    
      FIRST=.FALSE.                                                     PSJ02900    
      FAC=648000.D0/PI                                                  PSJ03000    
C--FAC CONVERTS RADIANS TO SECONDS OF ARC (206264.8062...)              PSJ03100    
      DO 1 K=1,3                                                        PSJ03200    
      ZETA1(K)=ZETA1(K)/FAC                                             PSJ03300    
      Z1(K)=Z1(K)/FAC                                                   PSJ03400    
    1 THETA1(K)=THETA1(K)/FAC                                           PSJ03500    
    2 TAU=(TJD-2451545.D0)/36525.D0                                     PSJ03600    
      DO 3 K=1,6                                                        PSJ03700    
    3 VEC(K)=0.D0                                                       PSJ03800    
      DO 4 K=1,3                                                        PSJ03900    
      VEC(1)=ZETA1(K)*TAU**K +VEC(1)                                    PSJ04000    
      VEC(2)=Z1(K)*TAU**K +VEC(2)                                       PSJ04100    
    4 VEC(3)=THETA1(K)*TAU**K+VEC(3)                                    PSJ04200    
      VEC(4)=(ZETA1(1)+2.D0*ZETA1(2)*TAU+3.D0*ZETA1(3)*TAU**2)/36525.D0 PSJ04300    
      VEC(5)=(Z1(1)+2.D0*Z1(2)*TAU+3.D0*Z1(3)*TAU**2)/36525.D0          PSJ04400    
      VEC(6)=(THETA1(1)+2.D0*THETA1(2)*TAU+3.D0*THETA1(3)*TAU**2)       PSJ04500    
     1 /36525.D0                                                        PSJ04600    
      CXI=DCOS(VEC(1))                                                  PSJ04700    
      SXI=DSIN(VEC(1))                                                  PSJ04800    
      CT=DCOS(VEC(3))                                                   PSJ04900    
      ST=DSIN(VEC(3))                                                   PSJ05000    
      CZ=DCOS(VEC(2))                                                   PSJ05100    
      SZ=DSIN(VEC(2))                                                   PSJ05200    
      PMAT(1,1)=CXI*CT*CZ-SXI*SZ                                        PSJ05300    
      PMAT(1,2)=-SXI*CT*CZ-CXI*SZ                                       PSJ05400    
      PMAT(1,3)=-ST*CZ                                                  PSJ05500    
      PMAT(2,1)=CXI*CT*SZ+SXI*CZ                                        PSJ05600    
      PMAT(2,2)=-SXI*CT*SZ+CXI*CZ                                       PSJ05700    
      PMAT(2,3)=-ST*SZ                                                  PSJ05800    
      PMAT(3,1)=CXI*ST                                                  PSJ05900    
      PMAT(3,2)=-SXI*ST                                                 PSJ06000    
      PMAT(3,3)=CT                                                      PSJ06100    
C--NOW FOR VELOCITIES                                                   PSJ06200    
C-- USE RBDOT(I)=SUM(J) PMAT(I,J)*RADOT(J) +SUM(J) PMATDT(I,J)*RA(J)    PSJ06300    
      PMATDT(1,1)=VEC(4)*PMAT(1,2)-VEC(5)*PMAT(2,1)+CXI*PMAT(1,3)*VEC(6)PSJ06400    
      PMATDT(1,2)=-VEC(4)*PMAT(1,1)-VEC(5)*PMAT(2,2)+SXI*SZ*CZ*VEC(6)   
      PMATDT(1,2)=-VEC(4)*PMAT(1,1)-VEC(5)*PMAT(2,2)+SXI*ST*CZ*VEC(6)   PSJ06500    
      PMATDT(1,3)=-CT*CZ*VEC(6)-VEC(5)*PMAT(2,3)                        PSJ06600    
      PMATDT(2,1)=VEC(4)*PMAT(2,2)+VEC(5)*PMAT(1,1)+CXI*PMAT(2,3)*VEC(6)PSJ06700    
      PMATDT(2,2)=-VEC(4)*PMAT(2,1)+VEC(5)*PMAT(1,2)-SXI*PMAT(2,3)*     PSJ06800    
     1 VEC(6)                                                           PSJ06900    
      PMATDT(2,3)=VEC(5)*PMAT(1,3)-VEC(6)*CT*SZ                         PSJ07000    
      PMATDT(3,1)=VEC(5)*PMAT(3,2)+VEC(6)*CT*CXI
      PMATDT(3,1)=VEC(4)*PMAT(3,2)+VEC(6)*CT*CXI                        PSJ07100    
      PMATDT(3,2)=-VEC(5)*PMAT(3,1)-VEC(6)*SXI*CT   
      PMATDT(3,2)=-VEC(4)*PMAT(3,1)-VEC(6)*SXI*CT                       PSJ07200    
      PMATDT(3,3)=-ST*VEC(6)                                            PSJ07300    
      RETURN                                                            PSJ07400    
      END                                                               PSJ07500    
      SUBROUTINE VELCTY(TOBS,H,RV,RCD)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION T(5),RV(5),R(3),RCDV(2),TI(3),COEF(5)   
      DIMENSION TDI(5),TD(5,5)  
      DO 20 I=1,5   
   20 T(I)=TOBS+DBLE(FLOAT(I-3))*H   
      DT=0.25D0 
      IF(DT.GT.H) DT=H  
      TI(1)=TOBS-DT     
      TI(2)=TOBS
      TI(3)=TOBS+DT     
      DO 70 I=1,3   
      DO 35 K=1,5   
      TDI(K)=TI(I)-T(K) 
      DO 35 J=1,5   
   35 TD(J,K)=T(J)-T(K) 
      DO 60 L=1,5   
      PRODN=1.D0
      PRODD=1.D0
      DO 40 M=1,5   
      IF(M.EQ.L) GO TO 40   
      PRODN=PRODN*TDI(M)
   40 CONTINUE  
      DO 50 M=1,5   
      IF(M.EQ.L) GO TO 50   
      PRODD=PRODD*TD(L,M)   
   50 CONTINUE  
      COEF(L)=PRODN/PRODD   
   60 CONTINUE  
      R(I)=0.D0 
      DO 65 N=1,5   
   65 R(I)=R(I)+COEF(N)*RV(N)   
   70 CONTINUE  
      RCDV(1)=(R(2)-R(1))/DT
      RCDV(2)=(R(3)-R(2))/DT
      RCD=(RCDV(1)+RCDV(2))/2   
      RETURN
      END   
      SUBROUTINE ROTAT6(X,A,L,Y)    
      DOUBLE PRECISION X(6),A(2),Y(6),C,S,T,SIGN
      K=IABS(L) 
      I=MOD(K,3)+1  
      J=6-I-K   
      SIGN=1.D0 
      IF(L .LT. 0) SIGN=-1.D0   
      C=DCOS(A(1))  
      S=DSIN(A(1)*SIGN) 
      T=X(I+3)*C+X(J+3)*S+SIGN*A(2)*(X(J)*C-X(I)*S) 
      Y(J+3)=X(J+3)*C-X(I+3)*S-SIGN*A(2)*(X(I)*C+X(J)*S)    
      Y(I+3)=T  
      Y(K+3)=X(K+3)     
      T=X(I)*C+X(J)*S   
      Y(J)=X(J)*C-X(I)*S
      Y(I)=T
      Y(K)=X(K) 
      RETURN
      END   
      SUBROUTINE NUTANG(TJD,DPSI,DEPS)  
C   
C   THIS SUBROUTINE COMPUTES NUTATION ANGLES.   
C   
C   INPUT - 
C      TJD - EPHEMERIS TIME OF OBSERVATION (JED).   
C   
C   OUTPUT -
C      DPSI - DELTA PSI (RADIANS).  
C      DEPS - DELTA EPSILON (RADIANS).  
C   
C   REF. - J. MEEUS, ASTRONOMICAL FORMULAE FOR CALCULATORS, MONOGRAFIEEN
C   OVER ASTRONOMIE EN ASTROFYSICA, UITGEGEVEN DOOR VOLKSSTERRENWACHT   
C   URANIA V.Z.W. EN VERENIGING VOOR STERRENKUNDE V.Z.W. VOL. 4, 1979.  
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DATA ASPR/206264.806247096355D0/  
      DATA DPR/57.2957795130823252D0/   
      TJC=(TJD-2415020.0D0)/36525.D0
      CMLSUN=(279.6967D0+(36000.7689D0+3.03D-4*TJC)*TJC)/DPR
      CMLMN=(270.4342D0+(481267.8831D0-1.133D-3*TJC)*TJC)/DPR   
      CMASUN=(358.4758D0+(35999.0498D0-1.5D-4*TJC)*TJC)/DPR 
      CMAMN=(296.1046D0+(477198.8491D0+9.192D-3*TJC)*TJC)/DPR   
      CLANMN=(259.1833D0-(1934.1420D0-2.078D-3*TJC)*TJC)/DPR
      DPSI=-(17.2327D0+1.737D-2*TJC)*DSIN(CLANMN)   
     *-(1.2729D0+1.3D-4*TJC)*DSIN(2.D0*CMLSUN)  
     *+2.088D-1*DSIN(2.D0*CLANMN)-2.037D-1*DSIN(2.D0*CMLMN) 
     *+(1.261D-1-3.1D-4*TJC)*DSIN(CMASUN)+6.75D-2*DSIN(CMAMN)   
     *-(4.97D-2-1.2D-4*TJC)*DSIN(2.D0*CMLSUN+CMASUN)
     *-3.42D-2*DSIN(2.D0*CMLMN-CLANMN)-2.61D-2*DSIN(2.D0*CMLMN+CMAMN)   
     *+2.14D-2*DSIN(2.D0*CMLSUN-CMASUN) 
     *-1.49D-2*DSIN(2.D0*CMLSUN-2.D0*CMLMN+CMAMN)   
     *+1.24D-2*DSIN(2.D0*CMLSUN-CLANMN)+1.14D-2*DSIN(2.D0*CMLMN-CMAMN)  
      DEPS=(9.21D0+9.1D-4*TJC)*DCOS(CLANMN)     
     *+(5.522D-1-2.9D-4*TJC)*DCOS(2.D0*CMLSUN)-9.04D-2*DCOS(2.D0*CLANMN)
     *+8.84D-2*DCOS(2.D0*CMLMN)+2.16D-2*DCOS(2.D0*CMLSUN+CMASUN)
     *+1.83D-2*DCOS(2.D0*CMLMN-CLANMN)+1.13D-2*DCOS(2.D0*CMLMN+CMAMN)   
     *-9.3D-3*DCOS(2.D0*CMLSUN-CMASUN)-6.6D-3*DCOS(2.D0*CMLSUN-CLANMN)  
      DPSI=DPSI/ASPR    
      DEPS=DEPS/ASPR    
      RETURN
      END   
      SUBROUTINE ANABR3(DJ,X)   
C   
C   THIS SUBROUTINE APPLIES THE CIRCULAR PORTION OF THE ANNUAL PART OF  
C   THE STELLAR ABERRATION TO INPUT COORDINATES.
C   
C   REF. - MEEUS,J., ASTRONOMICAL FORMULAE FOR CALCULATORS, MONOGRAFIEEN
C   OVER ASTRONOMIE EN ASTROFYSICA, UITGEGEVEN DOOR VOLKSSTERRENWACHT   
C   URANIA V.Z.W. EN VERENIGING VOOR STERRENKUNDE V.Z.W. VOL. 4, 1979.  
C   
C   NOTE - THE INPUT RECTANGULAR COORDINATES ARE REFERRED TO THE MEAN   
C   EQUATOR AND EQUINOX OF DATE.    
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION X(6)    
      DATA DPR/57.29577951D0/   
      DATA CONSAB/-9.933832328D-5/  
      TJC=(DJ-2415020.0D0)/36525.D0 
      CMASUN=(358.47583D0+(35999.04975D0-(1.5D-4+3.3D-6*TJC)*TJC)*TJC)  
     */DPR  
      CC=(1.919460D0-(4.789D-3+1.4D-5*TJC)*TJC)*DSIN(CMASUN)
     *+(2.0094D-2-1.00D-4*TJC)*DSIN(2.D0*CMASUN)
     *+2.93D-4*DSIN(3.D0*CMASUN)    
      CMLSUN=279.69668D0+(36000.76892D0+3.025D-4*TJC)*TJC   
      TLSUN=(DMOD(CMLSUN+CC,360.D0))/DPR
      ECLOBL=(23.452294D0-(1.30125D-2+(1.64D-6-5.03D-7*TJC)*TJC)*TJC)   
     */DPR  
      SR=DSQRT(X(1)*X(1)+X(2)*X(2)+X(3)*X(3))   
      RA=DATAN2(X(2),X(1))  
      DEC=DASIN(X(3)/SR)
      SINRA=DSIN(RA)    
      COSRA=DCOS(RA)    
      SINDEC=DSIN(DEC)  
      COSDEC=DCOS(DEC)  
      SINTL=DSIN(TLSUN) 
      COSTL=DCOS(TLSUN) 
      SINEPS=DSIN(ECLOBL)   
      COSEPS=DCOS(ECLOBL)   
      TANEPS=SINEPS/COSEPS  
      DELRA=CONSAB*(COSRA*COSTL*COSEPS+SINRA*SINTL)/COSDEC  
      DELDEC=CONSAB*(COSTL*COSEPS*(TANEPS*COSDEC-SINRA*SINDEC)  
     *+COSRA*SINDEC*SINTL)  
      RA=RA+DELRA   
      DEC=DEC+DELDEC    
      COSDEC=DCOS(DEC)  
      X(1)=SR*COSDEC*DCOS(RA)   
      X(2)=SR*COSDEC*DSIN(RA)   
      X(3)=SR*DSIN(DEC) 
      RETURN
      END   
      SUBROUTINE DIABER(STACOR,RU,RA,DEC)   
C   
C   THIS SUBROUTINE APPLIES THE DIURNAL PORTION OF THE STELLAR  
C   ABERRATION TO THE RIGHT ASCENSION AND DECLINATION.  
C   REFERENCE - P.49 OF THE EXPLANATORY SUPPLEMENT TO THE AENA. 
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION STACOR(3)   
      DATA TWOPI/6.283185307179586D0/   
      HAL=RU-RA 
      IF(HAL.LT.0.D0) HAL=HAL+TWOPI 
      DRA=1.5490D-6*STACOR(2)*DCOS(HAL)/DCOS(DEC)   
      DDEC=1.5514D-6*STACOR(2)*DSIN(HAL)*DSIN(DEC)  
      RA=RA+DRA 
      DEC=DEC+DDEC  
      RETURN
      END   
      SUBROUTINE SUN (DJ,EL,C,XSUN,YSUN,ZSUN)   
C   
C     SOME NECESSARY PRELIMINARIES  
C   
      DOUBLE PRECISION DJ,T,TP,RO,GME,GV,GMA,GJ,GS,DL,DR,DBLARG,DB,DG,  
     1D,T18,EL(21),C(16),TWOPI,STR,RTD  
      DOUBLE PRECISION S,EA,EB,EQ,ED,EPS,XSUNE,YSUNE,ZSUNE, 
     *XSUN,YSUN,ZSUN,FOUR,CONV11,CONV12 
      DIMENSION X(8,121),X1(160),X2(160),X3(160),X4(160),X5(160),X6(8)  
      DIMENSION X0(160) 
      DIMENSION X01(72),X02(8),X11(72),X12(8),X21(72),X22(8),X31(72),
     1X32(8),X41(72),X42(8),X51(72),X52(8)
      DIMENSION X00(80),X10(80),X20(80),X30(80),X40(80),X50(80)
      EQUIVALENCE (X0(1),X00), (X1(1),X10), (X2(1),X20), (X3(1),X30),
     1            (X4(1),X40), (X5(1),X50)
      EQUIVALENCE (X0(81),X01), (X0(153),X02), (X1(81),X11), 
     1 (X1(153),X12), (X2(81),X21), (X2(153),X22), (X3(81),X31),
     2 (X3(153),X32), (X4(81),X41), (X4(153),X42), (X5(81),X51),
     3 (X5(153),X52)
      EQUIVALENCE(X(1,  1),X0(1))   
      EQUIVALENCE(X(1, 21),X1(1))   
      EQUIVALENCE(X(1, 41),X2(1))   
      EQUIVALENCE(X(1, 61),X3(1))   
      EQUIVALENCE(X(1, 81),X4(1))   
      EQUIVALENCE(X(1,101),X5(1))   
      EQUIVALENCE(X(1,121),X6(1))   
      DATA TWOPI/6.283185307179586D0/   
      DATA STR/206264806.2470964D0/ 
      DATA RTD/57.295779513082321D0/
C   
C*******************************************************************************
C   
C     PART I    TABLES OF THE PERTURBATIONS 
C   
C     PERTURBATIONS BY MERCURY  
C   
C                  J    I     VC      VS    RHOC    RHOS      BC     BS 
      DATA X00/  - 1.,+ 1., -   6.,-  11., +  26.,-  12.,     0.,    0.,
     1           - 1.,+ 2., -   3.,-   3., -   4.,+   5.,     0.,    0.,
     2           - 1.,+ 3., +  15.,-   1., -   1.,-  18.,     0.,    0.,
     3           - 1.,+ 4., +  19.,-  13., -   2.,-   4.,     0.,    0.,
     4           - 1.,  0., +  33.,-  67., -  85.,-  39., +  24.,-  17.,
     5           - 1.,+ 1., +2353.,-4228., -2062.,-1146., -   4.,+   3.,
     6           - 1.,+ 2., -  65.,-  34., +  68.,-  14., +   6.,-  92.,
     7           - 1.,+ 3., -   3.,-   8., +  14.,-   8., +   1.,+   7.,
     8           - 2.,  0.,     0.,    0.,     0.,+   4.,     0.,    0.,
     9           - 2.,+ 1., -  99.,+  60., +  84.,+ 136., +  23.,-   3./
      DATA X01/
     1           - 2.,+ 2., -4702.,+2903., +3593.,+5822., +  10.,-   6.,
     2           - 2.,+ 3., +1795.,-1737., - 596.,- 632., +  37.,-  56.,
     3           - 2.,+ 4., +  30.,-  33., +  40.,+  33., +   5.,-  13.,
     4           - 3.,+ 2., -  13.,    0.,     0.,+  21., +  13.,+   5.,
     5           - 3.,+ 3., - 666.,+  27., +  44.,+1044., +   8.,+   1.,
     6           - 3.,+ 4., +1508.,- 397., - 381.,-1448., + 185.,- 100.,
     7           - 3.,+ 5., + 763.,- 684., + 126.,+ 148., +   6.,-   3.,
     8           - 3.,+ 6., +  12.,-  12., +  14.,+  13., -   2.,+   4.,
     9           - 4.,+ 3.,     0.,    0.,     0.,+   6., +   4.,+   5./
      DATA X02/
     1           - 4.,+ 4., - 188.,-  93., - 166.,+ 337.,     0.,    0./
      DATA X10/  - 4.,+ 5., - 139.,-  38., -  51.,+ 189., -  31.,-   1.,
     1           - 4.,+ 6., + 146.,-  42., -  25.,-  91., +  12.,    0.,
     2           - 4.,+ 7., +   5.,-   4., +   3.,+   5.,     0.,    0.,
     3           - 5.,+ 5., -  47.,-  69., - 134.,+  93.,     0.,    0.,
     4           - 5.,+ 6., -  28.,-  25., -  39.,+  43., -   8.,-   4.,
     5           - 5.,+ 7., - 119.,-  33., -  37.,+ 136., -  18.,-   6.,
     6           - 5.,+ 8., + 154.,    0.,     0.,-  26.,     0.,    0.,
     7           - 6.,+ 5.,     0.,    0.,     0.,    0., -   2.,+   6.,
     8           - 6.,+ 6., -   4.,-  38., -  80.,+   8.,     0.,    0.,
     9           - 6.,+ 7., -   4.,-  13., -  24.,+   7., -   2.,-   3./
      DATA X11/
     1           - 6.,+ 8., -   6.,-   7., -  10.,+  10., -   2.,-   3.,
     2           - 6.,+ 9., +  14.,+   3., +   3.,-  12.,     0.,    0.,
     3           - 7.,+ 7., +   8.,-  18., -  38.,-  17.,     0.,    0.,
     4           - 7.,+ 8., +   1.,-   6., -  12.,-   3.,     0.,    0.,
     5           - 7.,+ 9., +   1.,-   3., -   4.,+   1.,     0.,    0.,
     6           - 7.,+10., -   2.,-   2., -   3.,+   3.,     0.,    0.,
     7           - 8.,+ 8., +   9.,-   7., -  14.,-  19.,     0.,    0.,
     8           - 8.,+ 9., +   2.,-   3., -   5.,-   4.,     0.,    0.,
     9           - 8.,+12., -  33.,-  54., -  43.,+   8., -   5.,-   9./
      DATA X12/
     1           - 8.,+13.,     0.,    0., -   9.,-   8.,     0.,    0./
      DATA X20/  - 8.,+14.,     0.,    0., -  25.,+  22.,     0.,    0.,
     1           - 9.,+ 9., +   6.,-   1., -   2.,-  13.,     0.,    0.,
     2           - 9.,+10.,     0.,    0., -   1.,-   4.,     0.,    0.,
     3           -10.,+10.,     0.,    0., +   3.,-   7.,     0.,    0.,
     4           + 1.,- 2., -   5.,-   4., -   5.,+   6.,     0.,    0.,
     5           + 1.,- 1., - 216.,- 167., -  92.,+ 119.,     0.,    0.,
     6           + 1.,  0., -   8.,-  47., +  27.,-   6.,     0.,    0.,
     7           + 2.,- 3., +  40.,-  10., -  13.,-  50.,     0.,    0.,
     8           + 2.,- 2., +1963.,- 567., - 573.,-1976.,     0.,-   8.,
     9           + 2.,- 1., -1659.,- 617., +  64.,- 137.,     0.,    0./
      DATA X21/
     1           + 2.,  0., -  24.,+  15., -  18.,-  25., -   8.,+   2.,
     2           + 3.,- 4., +   1.,-   4., -   6.,    0.,     0.,    0.,
     3           + 3.,- 3., +  53.,- 118., - 154.,-  67.,     0.,    0.,
     4           + 3.,- 2., + 396.,- 153., -  77.,- 201.,     0.,    0.,
     5           + 3.,- 1., +   8.,+   1.,     0.,+   6.,     0.,    0.,
     6           + 4.,- 4., +  11.,+  32., +  46.,-  17.,     0.,    0.,
     7           + 4.,- 3., - 131.,+ 483., + 461.,+ 125., +   7.,+   1.,
     8           + 4.,- 2., + 526.,- 256., +  43.,+  96.,     0.,    0.,
     9           + 4.,- 1., +   7.,-   5., +   6.,+   8.,     0.,    0./
      DATA X22/
     1           + 5.,- 5., -   7.,+   1.,     0.,+  12.,     0.,    0./
      DATA X30/  + 5.,- 4., +  49.,+  69., +  87.,-  62.,     0.,    0.,
     1           + 5.,- 3., -  38.,+ 200., +  87.,+  17.,     0.,    0.,
     2           + 5.,- 2., +   3.,+   1., -   1.,+   3.,     0.,    0.,
     3           + 6.,- 6.,     0.,    0., -   4.,-   3.,     0.,    0.,
     4           + 6.,- 5., -  20.,-   2., -   3.,+  30.,     0.,    0.,
     5           + 6.,- 4., - 104.,- 113., - 102.,+  94.,     0.,    0.,
     6           + 6.,- 3., -  11.,+ 100., -  27.,-   4.,     0.,    0.,
     7           + 7.,- 6., +   3.,-   5., -   9.,-   5.,     0.,    0.,
     8           + 7.,- 5., -  49.,+   3., +   4.,+  60.,     0.,    0.,
     9           + 7.,- 4., -  78.,-  72., -  26.,+  28.,     0.,    0./
      DATA X31/
     1           + 8.,- 7., +   1.,+   3., +   5.,-   1.,     0.,    0.,
     2           + 8.,- 6., +   6.,-   8., -  12.,-   9.,     0.,    0.,
     3           + 8.,- 5., +  51.,-  10., -   8.,-  44.,     0.,    0.,
     4           + 8.,- 4., -  17.,-  12., +   5.,-   6.,     0.,    0.,
     5           + 9.,- 7., +   2.,+   3., +   5.,-   3.,     0.,    0.,
     6           + 9.,- 6., +  13.,-  25., -  30.,-  16.,     0.,    0.,
     7           + 9.,- 5., +  60.,-  15., -   4.,-  17.,     0.,    0.,
     8           +10.,- 7., +   2.,+   5., +   7.,-   3.,     0.,    0.,
     9           +10.,- 6., -   7.,+  18., +  14.,+   6.,     0.,    0./
      DATA X32/
     1           +10.,- 5., +   5.,-   2.,     0.,    0.,     0.,    0./
      DATA X40/  +11.,- 7., +   9.,+  15., +  17.,-  10.,     0.,    0.,
     1           +11.,- 6., -  12.,+  42., +   8.,+   3.,     0.,    0.,
     2           +12.,- 7., -   4.,-   5., -   4.,+   3.,     0.,    0.,
     3           +13.,- 8., -  13.,-   1., -   1.,+  15.,     0.,    0.,
     4           +13.,- 7., -  30.,-  33., -   4.,+   3.,     0.,    0.,
     5           +15.,- 9., +  13.,-  16., -  17.,-  14.,     0.,    0.,
     6           +15.,- 8., + 200.,-  30., -   1.,-   6.,     0.,    0.,
     7           +17.,-10., -   2.,-   4., -   4.,+   2.,     0.,    0.,
     8           +17.,- 9., -  10.,+  24.,     0.,    0.,     0.,    0.,
     9           + 1.,- 3., -   3.,-   1., -   2.,+   5.,     0.,    0./
      DATA X41/
     1           + 1.,- 2., - 155.,-  52., -  78.,+ 193., +   7.,    0.,
     2           + 1.,- 1., -7208.,+  59., +  56.,+7067., -   1.,+  17.,
     3           + 1.,  0., - 307.,-2582., + 227.,-  89., +  16.,    0.,
     4           + 1.,+ 1., +   8.,-  73., +  79.,+   9., +   1.,+  23.,
     5           + 2.,- 3., +  11.,+  68., + 102.,-  17.,     0.,    0.,
     6           + 2.,- 2., + 136.,+2728., +4021.,- 203.,     0.,    0.,
     7           + 2.,- 1., - 537.,+1518., +1376.,+ 486., +  13.,+ 166.,
     8           + 2.,  0., -  22.,-  70., -   1.,-   8.,     0.,    0.,
     9           + 3.,- 4., -   5.,+   2., +   3.,+   8.,     0.,    0./
      DATA X42/
     1           + 3.,- 3., - 162.,+  27., +  43.,+ 278.,     0.,    0./
      DATA X50/  + 3.,- 2., +  71.,+ 551., + 796.,- 104., +   6.,-   1.,
     1           + 3.,- 1., -  31.,+ 208., + 172.,+  26., +   1.,+  18.,
     2           + 4.,- 4., -   3.,-  16., -  29.,+   5.,     0.,    0.,
     3           + 4.,- 3., -  43.,+   9., +  13.,+  73.,     0.,    0.,
     4           + 4.,- 2., +  17.,+  78., + 110.,-  24.,     0.,    0.,
     5           + 4.,- 1., -   1.,+  23., +  17.,+   1.,     0.,    0.,
     6           + 5.,- 5.,     0.,    0., -   1.,-   3.,     0.,    0.,
     7           + 5.,- 4., -   1.,-   5., -  10.,+   2.,     0.,    0.,
     8           + 5.,- 3., -   7.,+   2., +   3.,+  12.,     0.,    0.,
     9           + 5.,- 2., +   3.,+   9., +  13.,-   4.,     0.,    0./
      DATA X51/
     1           + 1.,- 2., -   3.,+  11., +  15.,+   3.,     0.,    0.,
     2           + 1.,- 1., -  77.,+ 412., + 422.,+  79., +   1.,+   6.,
     3           + 1.,  0., -   3.,- 320., +   8.,-   1.,     0.,    0.,
     4           + 1.,+ 1.,     0.,-   8., +   8.,    0., -   1.,+   6.,
     5           + 2.,- 3.,     0.,    0., -   3.,-   1.,     0.,    0.,
     6           + 2.,- 2., +  38.,- 101., - 152.,-  57.,     0.,    0.,
     7           + 2.,- 1., +  45.,- 103., - 103.,-  44.,     0.,    0.,
     8           + 2.,  0., +   2.,-  17.,     0.,    0.,     0.,    0.,
     9           + 3.,- 2., +   7.,-  20., -  30.,-  11.,     0.,    0./
      DATA X52/
     1           + 3.,- 1., +   6.,-  16., -  16.,-   6.,     0.,    0./
      DATA X6/  + 4.,- 2., +   1.,-   3., -   4.,-   1.,     0.,    0./
C   
C   
C*******************************************************************************
C   
C     PART II   REDUCTION OF ARGUMENT TIME  
C   
C     T  = TIME IN JULIAN CENTURIES FROM 1900 JANUARY 0, GREENWICH MEAN NOON
      T  = (DJ - 2415020.D0)/36525.D0   
C   
C     TP = TIME IN JULIAN YEARS     FROM 1850 JANUARY 0, GREENWICH MEAN NOON
      TP = (DJ - 2396758.D0)/365.25D0   
C   
C     T18= TIME IN JULIAN CENTURIES FROM 1800 JANUARY 0, GREENWICH MEAN NOON
      T18= (DJ - 2378496.D0)/36525.D0   
C   
C   
C*******************************************************************************
C   
C     PART III  COMPUTATION OF ELLIPTIC ELEMENTS AND SECULAR TERMS  
C   
      FOUR = 0.6283019457267408D+03              
      EL( 2) =  0.1675104D-01 - T*(0.4180D-04 + 0.126D-06*T)
      EL( 5) =  0.4908229466868880D+01 + (0.3000526416797348D-01
     1        +(0.7902463002085429D-05 +  0.5817764173314427D-07*T)*T)*T
      EL( 9) =  0.4881627934111871D+01 + (0.6283319509909086D+03
     1        + 0.5279620987282842D-05*T)*T 
      EL(10) =  0.6256583580497099D+01 + (  FOUR
     1        -(0.2617993877991491D-05 +  0.5817764173314427D-07*T)*T)*T
C   
C     REDUCTION TO THE FIRST REVOLUTION 
      EL( 9) = DMOD (EL( 9),TWOPI)  
      EL(10) = DMOD (EL(10),TWOPI)  
C   
C   
C   
C*******************************************************************************
C   
C     PART IV   LUNAR TERMS 
C   
C     FUNDAMENTAL ARGUMENTS OF HANSEN WITH NEWCOMB CORRECTIONS  
      EL(14) =  0.5859485105530519D+01 + (0.8399709200339593D+04
     1        +(0.4619304753611657D-04 +  0.6544984694978728D-07*T18)   
     2        *T18)*T18 
      EL(17) =  0.5807638839584459D+00 - (0.3375728238223387D+02
     1        -(0.3964806284113784D-04 +  0.3470781143063166D-07*T18)   
     2        *T18)*T18 
      EL(21) =  0.3933938487925745D+01 + (0.7101833330913285D+02
     1        -(0.1752456013106637D-03 -  0.1773109075921903D-06*T18)   
     2        *T18)*T18 
      EL(14) = DMOD (EL(14),TWOPI)  
      EL(17) = DMOD (EL(17),TWOPI)  
      EL(21) = DMOD (EL(21),TWOPI)  
C   
C     DERIVED ARGUMENTS 
      EL(15) = EL(14) - EL(21)  
      EL(16) = EL(14) - EL(17)  
      EL(15) = DMOD (EL(15),TWOPI)  
      EL(16) = DMOD (EL(16),TWOPI)  
C     MEAN ELONGATION   
      D      = EL(14) - EL(9)   
C   
C     COMBINATIONS OF ARGUMENTS AND THE PERTURBATIONS   
      D = DMOD (D,TWOPI)
      ARG = D   
      DL =    + 6454.*SIN(ARG) + 13.*SIN(3.*ARG)
      DR =    + 13360.*COS(ARG) +  30.*COS(3.*ARG)  
C   
      DBLARG = D + EL(15)   
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DL = DL +  177.*SIN(ARG)  
      DR = DR +  370.*COS(ARG)  
C   
      DBLARG = D - EL(15)   
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      DL = DL -  424.*SIN(ARG)  
      DR = DR - 1330.*COS(ARG)  
C   
      DBLARG = 3.D0*D - EL(15)  
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DL = DL +   39.*SIN(ARG)  
      DR = DR +   80.*COS(ARG)  
C   
      DBLARG = D + EL(10)   
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DL = DL -   64.*SIN(ARG)  
      DR = DR -  140.*COS(ARG)  
C   
      DBLARG = D - EL(10)   
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DL = DL +  172.*SIN(ARG)  
      DR = DR + 360.*COS(ARG)   
C   
      EL(16) = DMOD (EL(16),TWOPI)  
      ARG = EL(16)  
      DB =    + 576.*SIN(ARG)   
C   
      DBLARG = EL(16) + EL(15)  
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DB = DB +  16.*SIN(ARG)   
C   
      DBLARG = EL(16) - EL(15)  
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DB = DB -  47.*SIN(ARG)   
C   
      DBLARG = EL(16) - 2.D0*(EL(9) - EL(17))   
      DBLARG = DMOD (DBLARG,TWOPI)  
      ARG = DBLARG  
      DB = DB +  21.*SIN(ARG)   
C   
C   
C*******************************************************************************
C   
C     PART V    COMPUTATION OF PERIODIC PERTURBATIONS   
C   
C     THE PERTURBING MEAN ANOMALIES 
C   
      GME = 0.43296383D+01 + .2608784648D+02*TP 
      GV  = 0.19984020D+01 + .1021322923D+02*TP 
      GMA = 0.19173489D+01 + .3340556174D+01*TP 
      GJ  = 0.25836283D+01 + .5296346478D+00*TP 
      GS  = 0.49692316D+01 + .2132432808D+00*TP 
C   
C     REDUCTION TO FIRST REVOLUTION 
      GME = DMOD (GME,TWOPI)
      GV  = DMOD (GV ,TWOPI)
      GMA = DMOD (GMA,TWOPI)
      GJ  = DMOD (GJ ,TWOPI)
      GS  = DMOD (GS ,TWOPI)
C   
C   
C     MODIFICATION OF FUNDAMENTAL ARGUMENTS 
C   
C     APPLICATION OF THE JUPITER-SATURN GREAT INEQUALITY
C     TO JUPITER'S MEAN ANOMALY 
C   
      GJ = GJ + 0.579904067D-02 * DSIN(5.D0*GS - 2.D0*GJ + 1.1719644977 
     1     D0 - 0.397401726D-03 * TP)   
C   
C     LONG PERIOD PERTURBATIONS OF MEAN ANOMALY 
C   
C     TIME REPRESENTED IN SINGLE PRECISION BY 'ST'  
      ST = T
C     ARGUMENT ( 4MARS - 7EARTH + 3VENUS ) OF SECOND ORDER AS TO MASSES 
      DG = 266.*SIN(.555015 + 2.076942*ST)  
     1    +6400.*SIN(4.035027 + .3525565*ST)
     2    +(1882.-16.*T)*SIN(.9990265 + 2.622706*ST)   
C     ARGUMENT ( 3JUPITER - 8MARS + 4EARTH ) OF 2ND ORDER AS TO MASSES  
C   
C     ARGUMENT ( 13EARTH - 8VENUS ) FIRST ORDER IN MASSES, 5TH IN ECCENTRICITIES
C                                                          5TH IN INCLINATIONS  
C
C   
      GJ = DMOD (GJ,TWOPI)  
C   
C   
C     COMPUTATION OF THE EQUATION OF THE CENTER 
C   
C     FORM PERTURBED MEAN ANOMALY   
      EL(10) = DG/STR + EL(10)  
      EL(10) = DMOD(EL(10),TWOPI)   
      EL(12) =   DSIN(     EL(10)) * (6910057. - (17240. + 52.*T)*T)
     1         + DSIN(2.D0*EL(10)) * (  72338. -    361.*T) 
     2         + DSIN(3.D0*EL(10)) * (   1054. -      1.*T) 
     3         + DSIN(4.D0*EL(10)) *       18.  
C   
C     THE UNPERTURBED RADIUS VECTOR 
      RO     =                          30570. -    150.*T  
     1         - DCOS(     EL(10)) * (7274120. - (18140. + 50.*T)*T)
     2         - DCOS(2.D0*EL(10)) * (  91380. -    460.*T) 
     3         - DCOS(3.D0*EL(10)) * (   1450. -     10.*T) 
     4         - DCOS(4.D0*EL(10)) *       20.  
      EL(11) = 10.D0**(RO*1.D-09)   
C   
C     PERTURBATIONS BY MERCURY IN LONGITUDE AND RADIUS VECTOR   
      DO 10 K=1,4   
C     ARGUMENT  J*MERCURY +   I * EARTH 
      DBLARG = X(1,K)*GME + X(2,K)*EL(10)   
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      CS  = COS(ARG)
      SS  = SIN(ARG)
      DL  =(X(3,K)*CS  + X(4,K)*SS )+ DL
      DR  =(X(5,K)*CS  + X(6,K)*SS )+ DR
   10 CONTINUE  
C   
C     PERTURBATIONS BY VENUS
      DO 20 K=5,44  
C     ARGUMENT J * VENUS +   I * EARTH  
      DBLARG = X(1,K)*GV + X(2,K)*EL(10)
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      CS  = COS(ARG)
      SS  = SIN(ARG)
      DL  =(X(3,K)*CS  + X(4,K)*SS )+ DL
      DR  =(X(5,K)*CS  + X(6,K)*SS )+ DR
      DB  =(X(7,K)*CS  + X(8,K)*SS )+ DB
   20 CONTINUE  
C   
C     PERTURBATIONS BY MARS 
      DO 30 K=45,89 
C     ARGUMENT  J * MARS  +   I * EARTH 
      DBLARG = X(1,K)*GMA + X(2,K)*EL(10)   
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      CS  = COS(ARG)
      SS  = SIN(ARG)
      DL  =(X(3,K)*CS  + X(4,K)*SS )+ DL
      DR  =(X(5,K)*CS  + X(6,K)*SS )+ DR
      DB  =(X(7,K)*CS  + X(8,K)*SS )+ DB
   30 CONTINUE  
C   
C     PERTURBATIONS BY JUPITER  
      DO 40 K=90,110
C     ARGUMENT J*JUPITER +   I * EARTH  
      DBLARG = X(1,K)*GJ + X(2,K)*EL(10)
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      CS  = COS(ARG)
      SS  = SIN(ARG)
      DL  =(X(3,K)*CS  + X(4,K)*SS )+ DL
      DR  =(X(5,K)*CS  + X(6,K)*SS )+ DR
      DB  =(X(7,K)*CS  + X(8,K)*SS) +DB 
   40 CONTINUE  
C   
C     PERTURBATIONS BY SATURN   
      DO 50 K=111,121   
C     ARGUMENT J*SATURN  +   I * EARTH  
      DBLARG = X(1,K)*GS + X(2,K)*EL(10)
      DBLARG = DMOD(DBLARG,TWOPI)   
      ARG = DBLARG  
      CS  = COS(ARG)
      SS  = SIN(ARG)
      DL  =(X(3,K)*CS  + X(4,K)*SS )+ DL
      DR  =(X(5,K)*CS  + X(6,K)*SS )+ DR
      DB  =(X(7,K)*CS  + X(8,K)*SS )+ DB
   50 CONTINUE  
C   
C   
C*******************************************************************************
C   
C     PART VI   COMPUTATION OF ECLIPTIC COORDINATES 
C   
      C(1) = EL(11)*10.D0**(DR*1.D-09)  
      C(4) = (DL + DG + EL(12))/STR + EL(9) 
      C(4) = DMOD(C(4),TWOPI)   
      C(5) = DB/STR 
      C(2) = C(4)*RTD   
      C(3) = C(5)*RTD   
C   
C   
C*******************************************************************************
C   
C     THE FOLLOWING COMPUTES THE RECTANGULAR COORDINATES
C     REFERRED TO THE MEAN EQUATOR AND EQUINOX OF DATE. 
C   
      CONV11=(TWOPI/360.D0)/3600.D0 
      CONV12=36524.219879D0-6.14D-04*T   
      S=(DJ-2415020.3135D0)/CONV12  
      EA=(23.D0*3600.D0+27.D0*60.D0+8.26D0)*CONV11  
      EB=(-46.845D0*S)*CONV11   
      EQ=(-.0059D0*S*S)*CONV11  
      ED=(.00181D0*S*S*S)*CONV11
      EPS=EA+EB+EQ+ED   
      XSUNE=C(1)*DCOS(C(4))*DCOS(C(5))  
      YSUNE=C(1)*DSIN(C(4))*DCOS(C(5))  
      ZSUNE=C(1)*DSIN(C(5)) 
      XSUN=XSUNE
      YSUN=YSUNE*DCOS(EPS)-ZSUNE*DSIN(EPS)  
      ZSUN=YSUNE*DSIN(EPS)+ZSUNE*DCOS(EPS)  
      RETURN
      END   
      SUBROUTINE AZEL(LST,AC,DC,DELTA,XL,HGT,AZ,EL) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DOUBLE PRECISION LST  
C     FOLLOWING DEVELOPMENT FROM ESCOBAL P403   
C     FOR A GIVEN TIME (JD) THE RIGHT ASCENSION, DECLINATION AND
C     GEOCENTRIC DISTANCE OF THE COMET ARE KNOWN (AC,DC,DELTA). 
C     THE GEOCENTRIC LATITUDE (XL) AND THE HEIGHT OF THE OBSERVER   
C     ABOVE THE REF. ELLIPSOID (HGT IN KM.) ARE INPUT   
C     AZIMUTH AND ELEVATION ARE OUT PUT IN DEGREES FOR INPUT LST.   
C     FOR A SPECIFIED TIME (JD) AND LOCATION (LONG., LAT) THE   
C     APPROPRIATE LST CAN BE COMPUTED FROM STANDISH'S S.R. SIDT.
      DATA RAD,F,AE,TWOPI /57.29577951D0,3.35233D-03,6378.15D0, 
     X6.283185308D0/    
C     COMPUTE GEODETIC LATITUDE (XLL) FROM GEOCENTRIC LAT.(XL). 
      F1=1.0D0/((1.0D0-F)**2)   
      XLL=DATAN(F1*DTAN(XL))
      DEL=DELTA*1.49597893D+08  
      SNLST=DSIN(LST)   
      CSLST=DCOS(LST)   
      SNLAT=DSIN(XLL)   
      CSLAT=DCOS(XLL)   
      P1=2.0D0*F-F**2   
      P2=DSQRT(1.0D0-P1*SNLAT**2)   
      G1=(AE/P2)+HGT    
      G2=((AE*(1.0D0-F)**2)/P2)+HGT 
      X=-G1*CSLAT*CSLST 
      Y=-G1*CSLAT*SNLST 
      Z=-G2*SNLAT   
      UX=DCOS(DC)*DCOS(AC)  
      UY=DCOS(DC)*DSIN(AC)  
      UZ=DSIN(DC)   
      PX=DEL*UX+X   
      PY=DEL*UY+Y   
      PZ=DEL*UZ+Z   
      PH=DSQRT(PX**2+PY**2+PZ**2)   
      XLX=PX/PH 
      XLY=PY/PH 
      XLZ=PZ/PH 
      SX=SNLAT*CSLST    
      SY=SNLAT*SNLST    
      SZ=-CSLAT 
      EX=-SNLST 
      EY=CSLST  
      EZ=0.0D0  
      ZX=CSLST*CSLAT    
      ZY=SNLST*CSLAT    
      ZZ=SNLAT  
      XLXH=SX*XLX+SY*XLY+SZ*XLZ     
      XLYH=EX*XLX+EY*XLY+EZ*XLZ     
      XLZH=ZX*XLX+ZY*XLY+ZZ*XLZ     
C     COMPUTE ELEVATION 
      H=DASIN(XLZH)     
      EL=H*RAD  
C     COMPUTE AZIMUTH   
      CSA=-XLXH/DCOS(H) 
      SNA=XLYH/DCOS(H)  
      A=DATAN2(SNA,CSA) 
      IF(A.LT. 0.0D0) A=A+TWOPI     
      AZ=A*RAD  
      RETURN
      END   
      SUBROUTINE APPAD1(IOPT,NTRIG,ETOBS,PUT,RSG,RCH,RCG,PSANG,IQUINX)  
C   
C   THIS SUBROUTINE COMPUTES THE GEOCENTRIC COORDINATES.  
C   
C   IF NTRIG=0 AND THE B1950.0 EQUINOX IS DESIRED, THE LIGHT TIME   
C   CORRECTION AND THE ELLIPTIC PORTION OF THE ANNUAL ABERRATION
C   ARE APPLIED TO THE OBJECT'S COORDINATES. IF THE J2000.0 EQUINOX IS
C   DESIRED, THE ABERRATION CORRECTION IS NOT APPLIED UNTIL THE NTRIG=1
C   SECTION OF THE SUBROUTINE.
C   IF NTRIG=1, PRECESSION, NUTATION, AND THE CIRCULAR  
C   PORTION OF THE ANNUAL ABERRATION ARE APPLIED. IF OPTION 4 IS
C   SELECTED THE POSITION ANGLE OF THE EXTENDED RADIUS VECTOR IS ALSO   
C   COMPUTED.   
C   
C   INPUT - 
C      IOPT - OPTION NUMBER.
C      NTRIG - 0 OR 1.  
C      ETOBS - EPHEMERIS TIME OF OBSERVATION, IN J.D.   
C      PUT   - AN ARRAY CONTAINING DELTA PSI AND DELTA EPSILON, USED    
C               IN THE NUTATION SUBROUTINE, IN RADIANS.     
C      IQUINX - SELECTED EQUINOX THAT THE COORDINATES ARE REFERRED TO.  
C               IF IQUINX = 1, EQUINOX IS B1950.0.  
C               IF IQUINX = 2, EQUINOX IS J2000.0.  
C   
C   OUTPUT- 
C      RSG - GEOCENTRIC SOLAR COORDINATES, WRT THE MEAN EQUATOR AND     
C             EQUINOX OF B1950.0 OR J2000.0, IN AU'S.   
C      RCH - HELIOCENTRIC OBJECT COORDINATES, WRT THE MEAN EQUATOR   
C             AND EQUINOX OF B1950.0 OR J2000.0, IN AU'S.   
C      RCG - GEOCENTRIC OBJECT COORDINATES, IN AU'S. 
C            IF NTRIG=0, WRT MEAN EQUATOR AND EQUINOX OF B1950.0
C                        OR J2000.0.
C            IF NTRIG=1, WRT TRUE EQUATOR AND EQUINOX OF DATE.  
C      PSANG - IF IOPT=4, POSITION ANGLE OF EXTENDED RADIUS VECTOR  
C                (APPROXIMATING THE COMET'S TAIL), IN RADIANS.  
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL*8 EL(21),C(16),RSG(6),RCH(6),RCG(6)  
      REAL*8 RCGTMP(6),RCHTMP(6),RCTAIL(6)  
      REAL*8 PUT(4),OBM(2)  
      LOGICAL FIRST     
      COMMON/ELM/TT,Q,ECR,PX,PY,PZ,QX,QY,QZ     
      DATA CAUPD/173.1446335D0/     
      DATA B1950/2433282.423D0/     
      DATA TWOPI/6.283185307179586D0/   
C   
      FIRST=.TRUE.  
      IF(NTRIG.EQ.1) GO TO 50   
      DTZ=0.D0  
      ETINC=0.D0
      DO 1 I=1,6
      RCH(I)=0.D0   
      RSG(I)=0.D0   
    1 RCG(I)=0.D0   
C   
C   COMPUTE HELIOCENTRIC OBJECT COORDINATES. REFER COORDINATES TO
C   THE J2000.0 EQUINOX IF REQUESTED.   
      CALL HELXYZ(ETOBS,TT,Q,ECR,PX,PY,PZ,QX,QY,QZ,RCH(1),RCH(2),RCH(3))
      IF(IQUINX.EQ.2) CALL J2000(RCH)   
C   
C   COMPUTE GEOCENTRIC SOLAR COORDINATES, AND PRECESS THEM EITHER TO THE
C   MEAN EQUATOR AND EQUINOX OF 1950.0 OR J2000.0.  
      CALL SUN(ETOBS,EL,C,RSG(1),RSG(2),RSG(3)) 
      CALL PRECES(B1950,ETOBS,.FALSE.,RSG)  
      IF(IQUINX.EQ.2) CALL J2000(RSG)   
C   
C   COMPUTE GEOCENTRIC OBJECT COORDINATES AND PERFORM LIGHT TIME
C   ITERATION.
   11 DO 12 I=1,3   
   12 RCG(I)=RCH(I)+RSG(I)  
      SR=DSQRT(RCG(1)**2+RCG(2)**2+RCG(3)**2)   
      DT=SR/CAUPD   
      IF(ABS(DT-DTZ).LT.1.D-7) GO TO 15 
      ETINC=ETINC+DTZ-DT
      ETT2=ETOBS+ETINC  
      DTZ=DT
      CALL HELXYZ(ETT2,TT,Q,ECR,PX,PY,PZ,QX,QY,QZ,RCH(1),RCH(2),RCH(3)) 
      IF(IQUINX.EQ.2) CALL J2000(RCH)   
      GO TO 11  
C   
   15 CONTINUE  
C   
C   APPLY E-TERM CORRECTIONS.     
      IF(IQUINX.EQ.2) GO TO 30  
      CALL ETERM(RCG)   
   30 IF(NTRIG.EQ.0) GO TO 80   
C   
C   PRECESS THE GEOCENTRIC COORDINATES TO THE MEAN EQUATOR AND
C     EQUINOX OF DATE, AND APPLY THE CIRCULAR PORTION OF THE ANNUAL PART
C     OF THE STELLAR ABERRATION. IF IQUINX=J2000.0, APPLY THE ELLIPTIC
C     PORTION OF THE ANNUAL ABERRATION ALSO.
   50 CONTINUE  
      IF(IQUINX.EQ.2) CALL ETERM(RCG)   
      IF(IQUINX.EQ.2) GO TO 53  
      CALL PRECES(B1950,ETOBS,.TRUE.,RCG)   
      GO TO 54  
   53 CALL PF2000(ETOBS,RCG)
   54 CALL ANABR3(ETOBS,RCG)
C   
C   NUTATE THE COORDINATES TO THE TRUE EQUATOR AND EQUINOX OF DATE. 
      DO 60 I=1,4   
   60 PUT(I)=0.D0   
      CALL NUTANG(ETOBS,DPSI,DEPS)  
      PUT(1)=DPSI   
      PUT(2)=DEPS   
      CALL NUTATE(ETOBS,PUT,OBM,.TRUE.,RCG)     
C   
      IF(IOPT.EQ.1) GO TO 80
      IF(.NOT.FIRST) GO TO 190  
C   
C     COMPUTE POSITION ANGLE OF COMET TAIL.     
      FIRST=.FALSE.     
      DO 182 I=1,6  
  182 RCGTMP(I)=RCG(I)  
      DO 184 I=1,3  
      RCHTMP(I)=RCH(I)  
      RCH(I)=1.1D0*RCH(I)   
  184 RCG(I)=RCH(I)+RSG(I)  
      SR=DSQRT(RCG(1)**2+RCG(2)**2+RCG(3)**2)   
      GO TO 15  
  190 CONTINUE  
      DO 192 I=1,3  
  192 RCH(I)=RCHTMP(I)  
      DO 194 I=1,6  
      RCTAIL(I)=RCG(I)  
  194 RCG(I)=RCGTMP(I)  
      RHOT=DSQRT(RCTAIL(1)**2+RCTAIL(2)**2+RCTAIL(3)**2)    
      DECT=DASIN(RCTAIL(3)/RHOT)    
      RAT=DATAN2(RCTAIL(2),RCTAIL(1))   
      IF(RAT.LT.0.D0) RAT=RAT+TWOPI 
      SR=DSQRT(RCG(1)*RCG(1)+RCG(2)*RCG(2)+RCG(3)*RCG(3))   
      DEC=DASIN(RCG(3)/SR)  
      RA=DATAN2(RCG(2),RCG(1))  
      IF(RA.LT.0.D0) RA=RA+TWOPI    
      DRAT=RAT-RA   
      DDECT=DECT-DEC    
      SINP=DSIN(DRAT)   
      COSP=DTAN(DECT)*DCOS(DEC)-DSIN(DEC)*DCOS(DRAT)
      PSANG=DATAN2(SINP,COSP)   
      IF(PSANG.LT.0.D0) PSANG=PSANG+TWOPI   
   80 CONTINUE  
      RETURN
      END   
      SUBROUTINE PF2000(TJD,X)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL*8 VEC(6),PMAT(3,3),PMATDT(3,3),X(6),Y(6) 
      CALL PRECSJ(TJD,VEC,PMAT,PMATDT)  
      DO 20 I=1,3   
   20 Y(I)=PMAT(I,1)*X(1)+PMAT(I,2)*X(2)+PMAT(I,3)*X(3)     
      DO 30 I=1,3   
   30 X(I)=Y(I) 
      RETURN
      END   
      SUBROUTINE ETERM(X)   
C   
C   THIS SUBROUTINE APPLIES THE ELLIPTIC PORTION (E-TERMS) OF THE ANNUAL
C   PART OF STELLAR ABERRATION TO THE RIGHT ASCENSION AND DECLINATION.  
C   REFERENCE - P.144 OF THE EXPLANATORY SUPPLEMENT TO THE AENA.
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL*8 X(6)   
      DATA TWOPI/6.283185307179586D0/   
C   
      SR=DSQRT(X(1)**2+X(2)**2+X(3)**2) 
      DEC=DASIN(X(3)/SR)
      RA=DATAN2(X(2),X(1))  
      IF(RA.LT.0.D0) RA=RA+TWOPI    
      DRA=-1.653215D-6*DSIN(2.945243113D0+RA)/DCOS(DEC)     
      DDEC=-1.653215D-6*DCOS(2.945243113D0+RA)*DSIN(DEC)    
     *-1.40596D-7*DCOS(DEC) 
      RA=RA+DRA 
      DEC=DEC+DDEC  
      X(1)=SR*DCOS(DEC)*DCOS(RA)    
      X(2)=SR*DCOS(DEC)*DSIN(RA)    
      X(3)=SR*DSIN(DEC) 
      RETURN
      END   
      SUBROUTINE APPAD2(IOPT,NTRIG,UTOBS,RU,ECLOBL,PUT,RSG,RCH,RCT,     
     *ROG,PSANG,IQUINX) 
C   
C   THIS SUBROUTINE COMPUTES THE TOPOCENTRIC COORDINATES. 
C   
C   IF NTRIG=0 AND IQUINX=B1950.0 (SEE BELOW), THE LIGHT TIME CORRECTION
C   AND THE ELLIPTIC PORTION OF THE ANNUAL ABERRATION ARE APPLIED TO THE
C   COORDINATES. IF IQUINX=J2000.0, THE ABERRATION CORRECTION IS NOT 
C   APPLIED UNTIL THE NTRIG=1 SECTION OF THE SUBROUTINE.
C   IF NTRIG=1, PRECESSION, NUTATION, THE CIRCULAR PORTION OF THE   
C   ANNUAL ABERRATION, AND THE DIURNAL ABERRATION ARE ALSO APPLIED.     
C   THE POSITION ANGLE OF THE EXTENDED RADIUS VECTOR IS ALSO COMPUTED.  
C   
C   INPUT - 
C      IOPT  - OPTION NUMBER.   
C      NTRIG  - 0 OR 1. 
C      UTOBS  - UNIVERSAL TIME OF OBSERVATION, IN J.D.  
C      IQUINX - SELECTED EQUINOX THAT THE COORDINATES ARE REFERRED TO.  
C                 IF IQUINX = 1, THE EQUINOX IS B1950.0.    
C                 IF IQUINX = 2, THE EQUINOX IS J2000.0.    
C   
C   OUTPUT- 
C       RU     - LOCAL SIDEREAL TIME, IN RADIANS.   
C       ECLOBL - OBLIQUITY OF THE ECLIPTIC, IN RADIANS.     
C       PUT    - ARRAY CONTAINING DELTA PSI AND DELTA EPSILON, USED IN  
C                 THE NUTATION SUBROUTINES, IN RADIANS.     
C       RSG    - GEOCENTRIC SOLAR COORDINATES, WRT THE MEAN EQUATOR     
C                 AND EQUINOX OF B1950.0 OR J2000.0, IN AU'S.   
C       RCH    - HELIOCENTRIC OBJECT COORDINATES, WRT THE MEAN EQUATOR  
C                 AND EQUINOX OF B1950.0 OR J2000.0, IN AU'S.   
C       RCT    - TOPOCENTRIC OBJECT COORDINATES, IN AU'S.    
C                 IF NTRIG=0, WRT MEAN EQUATOR AND EQUINOX OF B1950.0
C                             OR J2000.0.
C                 IF NTRIG=1, WRT TRUE EQUATOR AND EQUINOX OF DATE. 
C       ROG    - GEOCENTRIC OBSERVATORY COORDINATES, WRT THE MEAN   
C                 EQUATOR AND EQUINOX OF B1950.0 OR J2000.0, IN AU'S.   
C       PSANG  - IF IOPT=4, POSITION ANGLE OF EXTENDED RADIUS VECTOR    
C                    (APPROXIMATING THE COMET'S TAIL), IN RADIANS.  
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL*8 EL(21),C(16),RSG(6),RCH(6),RCT(6),ROG(6)   
      REAL*8 RCTTMP(6),RCHTMP(6),RCTAIL(6),RUU(2)   
      REAL*8 PUT(4),OBM(2),STACOR(3)
      LOGICAL FIRST     
      COMMON/ELM/TT,Q,ECR,PX,PY,PZ,QX,QY,QZ     
      COMMON/TOPO/AU,REM,STACOR,ETMUTC  
      DATA TWOPI/6.283185307179586D0/   
      DATA CAUPD/173.1446335D0/     
      DATA DJ1900/2415020.0D0/  
      DATA B1950/2433282.423D0/     
      DATA DPR/57.2957795130823252D0/   
      DATA RPTS/7.27220521664303933D-5/ 
C   
      FIRST=.TRUE.  
      ETOBS=ETMUTC+UTOBS
      AUPER=REM/AU  
C   
      IF(NTRIG.EQ.1) GO TO 50   
C   
      ETINC=0.D0
      DTZ=0.D0  
      RUU(1)=0.D0   
      RUU(2)=0.D0   
      DO 1 I=1,6
      RCH(I)=0.D0   
      RSG(I)=0.D0   
      ROG(I)=0.D0   
    1 RCT(I)=0.D0   
      DO 2 I=1,4
    2 PUT(I)=0.D0   
C   
C   COMPUTE HELIOCENTRIC OBJECT COORDINATES.     
      CALL HELXYZ(ETOBS,TT,Q,ECR,PX,PY,PZ,QX,QY,QZ,RCH(1),RCH(2),RCH(3))
      IF(IQUINX.EQ.2) CALL J2000(RCH)   
C   
C   COMPUTE GEOCENTRIC SOLAR COORDINATES AND PRECES THEM TO MEAN
C   EQUATOR AND EQUINOX OF 1950.0.  
      CALL SUN(ETOBS,EL,C,RSG(1),RSG(2),RSG(3)) 
      CALL PRECES(B1950,ETOBS,.FALSE.,RSG)  
      IF(IQUINX.EQ.2) CALL J2000(RSG)   
C   
C   CONVERT OBSERVATORY COORDINATES FROM CYLINDRICAL TO RECTANGULAR,    
C   AND ROTATE THEM TO MEAN EQUATOR AND EQUINOX OF 1950.0.  
      ROG(1)=AUPER*STACOR(2)
      ROG(2)=0.D0   
      ROG(3)=AUPER*STACOR(3)
      TU=(UTOBS-DJ1900)/36525.D0    
      RU=23925.836D0+(8640184.54D0+0.0929D0*TU)*TU  
      J=UTOBS   
      DJ5=J 
      DJ5=DJ5-0.5D0     
      TSEC=(UTOBS-DJ5)*TWOPI
      IF(TSEC.GE.TWOPI) TSEC=TSEC-TWOPI 
      CALL NUTANG(ETOBS,DPSI,DEPS)  
      PUT(1)=DPSI   
      PUT(2)=DEPS   
      TE=(ETOBS-DJ1900)/36525.D0    
      ECLOBL=(23.45229444D0-(1.30125D-2+(1.64D-6-5.03D-7*TE)*TE)*TE)/DPR
      RU=DMOD((RU*RPTS+DPSI*DCOS(ECLOBL)+TSEC+STACOR(1)),TWOPI) 
      RUU(1)=RU 
      CALL ROTAT6(ROG,RUU,-3,ROG)   
      CALL NUTATE(ETOBS,PUT,OBM,.FALSE.,ROG)    
      CALL PRECES(B1950,ETOBS,.FALSE.,ROG)  
      IF(IQUINX.EQ.2) CALL J2000(ROG)   
C   
C   COMPUTE TOPOCENTRIC OBJECT COORDINATES AND PERFORM THE LIGHT TIME    
C   ITERATION.  
   11 DO 12 I=1,3   
   12 RCT(I)=RCH(I)+RSG(I)-ROG(I)   
      SR=DSQRT(RCT(1)**2+RCT(2)**2+RCT(3)**2)   
      DT=SR/CAUPD   
      IF(ABS(DT-DTZ).LT.1.D-7) GO TO 15 
      ETINC=ETINC+DTZ-DT
      ETT2=ETOBS+ETINC  
      DTZ=DT
      CALL HELXYZ(ETT2,TT,Q,ECR,PX,PY,PZ,QX,QY,QZ,RCH(1),RCH(2),RCH(3)) 
      IF(IQUINX.EQ.2) CALL J2000(RCH)
      GO TO 11  
C   
   15 CONTINUE  
C   
C   APPLY ETERM CORRECTIONS.
      IF(IQUINX.EQ.2) GO TO 30  
      CALL ETERM(RCT)   
C   
   30 IF(IOPT.EQ.2) GO TO 80
      IF(NTRIG.EQ.0) GO TO 80   
C   
C   PRECESS COORDINATES TO MEAN EQUATOR AND EQUINOX 
C   OF DATE, AND APPLY CIRCULAR PORTION OF ANNUAL ABERRATION.   
C     IF THE J2000.0 EQUINOX IS REQUESTED, APPLY THE ELLIPTIC   
C     PORTION OF THE ANNUAL ABERRATION ALSO.    
   50 CONTINUE  
      IF(IQUINX.EQ.2) CALL ETERM(RCT)   
      IF(IQUINX.EQ.2) GO TO 53  
      CALL PRECES(B1950,ETOBS,.TRUE.,RCT)   
      GO TO 54  
   53 CALL PF2000(ETOBS,RCT)
   54 CALL ANABR3(ETOBS,RCT)
C   
C**** NUTATE COORDINATES TO TRUE EQUATOR AND EQUINOX OF DATE, AND APPLY 
C     DIURNAL PORTION OF STELLAR ABERRATION.    
      CALL NUTATE(ETOBS,PUT,OBM,.TRUE.,RCT)     
      SR=DSQRT(RCT(1)*RCT(1)+RCT(2)*RCT(2)+RCT(3)*RCT(3))   
      DEC=DASIN(RCT(3)/SR)  
      RA=DATAN2(RCT(2),RCT(1))  
      IF(RA.LT.0.D0) RA=RA+TWOPI    
      CALL DIABER(STACOR,RU,RA,DEC) 
      RCT(1)=SR*DCOS(DEC)*DCOS(RA)  
      RCT(2)=SR*DCOS(DEC)*DSIN(RA)  
      RCT(3)=SR*DSIN(DEC)   
C   
   80 IF(IOPT.EQ.2) GO TO 99
      IF(NTRIG.EQ.0) GO TO 99   
      IF(.NOT.FIRST) GO TO 90   
C   
C   COMPUTE POSITION ANGLE OF COMET TAIL.   
      FIRST=.FALSE.     
      DO 82 I=1,6   
   82 RCTTMP(I)=RCT(I)  
      DO 84 I=1,3   
      RCHTMP(I)=RCH(I)  
      RCH(I)=1.1D0*RCH(I)   
   84 RCT(I)=RCH(I)+RSG(I)-ROG(I)   
      SR=DSQRT(RCT(1)*RCT(1)+RCT(2)*RCT(2)+RCT(3)*RCT(3))   
      GO TO 15  
   90 CONTINUE  
      DO 92 I=1,3   
   92 RCH(I)=RCHTMP(I)  
      DO 94 I=1,6   
      RCTAIL(I)=RCT(I)  
   94 RCT(I)=RCTTMP(I)  
      RHOT=DSQRT(RCTAIL(1)**2+RCTAIL(2)**2+RCTAIL(3)**2)    
      DECT=DASIN(RCTAIL(3)/RHOT)    
      RAT=DATAN2(RCTAIL(2),RCTAIL(1))   
      IF(RAT.LT.0.D0) RAT=RAT+TWOPI 
      SR=DSQRT(RCT(1)*RCT(1)+RCT(2)*RCT(2)+RCT(3)*RCT(3))   
      DEC=DASIN(RCT(3)/SR)  
      RA=DATAN2(RCT(2),RCT(1))  
      IF(RA.LT.0.D0) RA=RA+TWOPI    
      DRAT=RAT-RA   
      SINP=DSIN(DRAT)   
      COSP=DTAN(DECT)*DCOS(DEC)-DSIN(DEC)*DCOS(DRAT)
      PSANG=DATAN2(SINP,COSP)   
      IF(PSANG.LT.0.D0) PSANG=PSANG+TWOPI   
C   
   99 CONTINUE  
      RETURN
      END   
      SUBROUTINE JDATE(FLAG,  JAHR,MONTH,DAY,CNAME,  DJD)    
C  SUBROUTINE DATE COMPUTES JULIAN DATE FROM CIVIL DATE,OR VICE VERSA.  
C     JAHR IS YEAR AD OR BC(INTEGER),DJD IS DOUBLE PRECISION JULIAN DATE.   
C     JAHR AND MONTH ARE INTEGERS, DAY A SINGLE PRECISION VARIABLE.     
C     IF DJD IS TO BE COMPUTED, IT MUST BE ENTERED AS ZERO. 
C     CIVIL DATE MAY BE EITHER JULIAN OR GREGORIAN CALENDAR,DEPENDING ON FLAG.  
C     FLAG IS 'G' FOR GREGORIAN CIVIL DATE, 'J' FOR JULIAN CIVIL DATE.  
C      CNAME IS THE NAME OF THE MONTH,SUITABLE FOR WRITING OUT (A6).    
      DIMENSION NO(12),DEPOCH(2)    
      CHARACTER*6 VNAME(12), CNAME  
      CHARACTER*1  FLAG 
      INTEGER Y, JAHRJ, JAHRG   
      DOUBLE PRECISION DJD,DEPOCH,DMJD  
      DATA VNAME/ '  JAN ','  FEB ','  MAR ','  APR ','  MAY ','  JUNE',
     1 '  JULY','  AUG ','  SEPT','  OCT ','  NOV ','  DEC '/   
C     JD 2159716.5 IS 1 JAN 1201AD (GREGORIAN CALENDAR).    
      DATA DEPOCH / 260423.5D0, 2159716.5D0/    
      DATA NO/31,28,31,30,31,30,31,31,30,31,30,31/  
C   
      IF ( DJD.GT.1.D-13 ) GO TO 50 
      Y = JAHR  
      M = MONTH 
      IF ( FLAG.EQ.'G' ) GO TO 10   
C     THE MULLER-WIMBERLEY STATEMENT FOR JULIAN CALENDAR FOLLOWS.   
      J=367*Y-7*(Y+5001+(M-9)/7)/4+275*M/9+1729777  
C  DBLE(FLOAT(J)) MAY NOT GIVE FULL PRECISION ON SOME MACHINES. 
      DJD = DBLE(DAY+FLOAT(J) ) -.5D0   
C   
      CNAME = VNAME(MONTH)  
      RETURN
   10 CONTINUE  
C     THE MULLER-WIMBERLY STATEMENT FOR GREGORIAN CALENDAR FOLLOWS.     
      J=367*Y-7*(Y+(M+9)/12)/4-3*((Y+(M-9)/7)/100+1)/4+275*M/9+1721029  
      DJD = DAY + J - .5D0  
C   
      CNAME = VNAME(MONTH)  
      RETURN
   50 CONTINUE  
      JUMP = 0  
      MODE = 2  
      IF ( FLAG.EQ.'J' ) MODE = 1   
      DMJD=DJD-DEPOCH(MODE) 
      L=DMJD
      FL=FLOAT(L)
      REMAIN=DMJD-DBLE(FL)  
      LEAP = 0  
      GO TO (51,52) ,  MODE 
   51 JAHR = JAHRJ(L)   
      IF ( MOD(JAHR,4).EQ.0)  JUMP = 1  
      GO TO 60  
   52 N400 = L/146097   
      IF ( L.EQ.146097 )  LEAP = 1  
      M400 = MOD(L,146097) - LEAP   
      N100 = M400/36524 
      L = MOD( M400,36524 ) 
      JAHR = JAHRG( L,N100,N400 )   
      IF (MOD(JAHR,4).NE.0) GO TO 60
      IF ( MOD(JAHR,100).NE.0)  JUMP = 1
      IF ( MOD(JAHR,400).EQ.0 ) JUMP = 1
   60 CONTINUE  
      L = L + LEAP  
      L = MOD (L,1461)  
      L = (L/1460)*365 + MOD(L,365) + 1 
      DO 55 MONTH = 1,12
      N = NO(MONTH)     
      IF (MONTH.EQ.2) N = 28+JUMP   
      L = L-N   
      IF (L.LE.0) GO TO 56  
   55 CONTINUE  
   56 CONTINUE  
      CNAME = VNAME(MONTH)  
      DAY = FLOAT(L+N) + REMAIN     
      RETURN
      END   
      INTEGER FUNCTION JAHRJ(IL)
      INTEGER IL
C   
      JAHRJ = (IL -IL/1460)/365 - 3999  
C
      RETURN
      END
      INTEGER FUNCTION JAHRG(IL,I100,I400)
      INTEGER IL,I100,I400
C
      JAHRG = (IL-IL/1460)/365+100*I100+400*I400+1201   
C
      RETURN
      END
      SUBROUTINE AZALT(RU,RA,DEC,AZ,ALT)
C   
C   THIS SUBROUTINE CONVERTS TOPOCENTRIC RIGHT ASCENSION AND DECLINATION
C   TO AZIMUTH AND ALTITUDE, USING AN ALGORITHM PRESENTED ON P.402 OF   
C   ESCOBAL,P., METHODS OF ORBIT DETERMINATION. 
C   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION STACOR(3),CL(3),CS(3),CE(3),CZ(3),CLH(3)    
      COMMON/TOPO/AU,REM,STACOR,ETMUTC  
      DATA FLAT/3.35233D-3/ 
      DATA TWOPI/6.283185307179586D0/   
      FLDFSQ=(1.D0-FLAT)**2 
      TANPHI=STACOR(3)/STACOR(2)/FLDFSQ 
      GEDLAT=DATAN(TANPHI)  
      COSGDL=DCOS(GEDLAT)   
      SINGDL=DSIN(GEDLAT)   
      COSRU=DCOS(RU)    
      SINRU=DSIN(RU)    
      CL(1)=DCOS(DEC)*DCOS(RA)  
      CL(2)=DCOS(DEC)*DSIN(RA)  
      CL(3)=DSIN(DEC)   
      CS(1)=SINGDL*COSRU
      CS(2)=SINGDL*SINRU
      CS(3)=-COSGDL     
      CE(1)=-SINRU  
      CE(2)=COSRU   
      CE(3)=0.D0
      CZ(1)=COSRU*COSGDL
      CZ(2)=SINRU*COSGDL
      CZ(3)=SINGDL  
      DO 20 I=1,3   
   20 CLH(I)=0.D0   
      DO 30 I=1,3   
      CLH(1)=CLH(1)+CS(I)*CL(I)     
      CLH(2)=CLH(2)+CE(I)*CL(I)     
   30 CLH(3)=CLH(3)+CZ(I)*CL(I)     
      COSH=DSQRT(1.D0-CLH(3)**2)    
      ALT=DATAN2(CLH(3),COSH)   
      COSA=-CLH(1)/COSH 
      SINA=CLH(2)/COSH  
      AZ=DATAN2(SINA,COSA)  
      IF(AZ.LT.0) AZ=AZ+TWOPI   
      RETURN
      END   
      SUBROUTINE HELXYZ(TOBS,TT,Q,ECR,PX,PY,PZ,QX,QY,QZ,XG,YG,ZG)   
C   
C   THIS SUBROUTINE COMPUTES HELIOCENTRIC EQUATORIAL RECTANGULAR COORD- 
C   INATES FOR THE EQUATOR AND EQUINOX OF 1950.0 FROM COMETARY TWO-BODY 
C   ELEMENTS AND THE P AND Q ROTATION FACTORS.
C
C   CODE TO SOLVE KEPLER'S EQUATION MODIFIED TO SET GENEROUS LIMITS ON
C   NUMBER OF ITERATIONS NEEDED IN THE ELLIPTIC AND HYPERBOLIC ALGORITHMS,
C   BY M. KEESEY, DEC 87.
C   
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)   
      DATA XK/0.01720209895D0/  
      EXCR=ECR-1.D0     
      IF(EXCR) 85,950,951   
  950 CONTINUE  
C   
C   PARABOLIC CASE  
      R2=2.0**(1.0/2.0) 
      Q32=Q**(3.0/2.0)  
      XN=XK*(TOBS-TT)/(R2*Q32)  
      KOUT=1
      SIG=1.0   
   70 SIG2=SIG**2   
      SIG3=SIG*SIG2     
      SIGMA=(XN+(2.0/3.0)*SIG3)/(1.0+SIG2)  
      KOUT=KOUT+1   
      IF(KOUT.GT.20) GO TO 80   
      SIG=SIGMA 
      GO TO 70  
   80 CONTINUE  
      S=SIGMA   
      S2=SIGMA**2   
      XG=Q*PX*(1.0-S2)+2.0*Q*QX*S   
      YG=Q*PY*(1.0-S2)+2.0*Q*QY*S   
      ZG=Q*PZ*(1.0-S2)+2.0*Q*QZ*S   
      RETURN
  951 CONTINUE  
C   
C   HYPERBOLIC CASE     
      AN1=Q/(1.D0-ECR)  
      AN2=-AN1  
      AN2=AN2**(3.D0/2.D0)  
      AN3=XK/AN2
      ANON=AN3*(TOBS-TT)
      FHV=ANON  
      I=1
  953 FHVN=FHV-(ECR*DSINH(FHV)-FHV-ANON)/(ECR*DCOSH(FHV)-1.D0)  
      TST=FHVN-FHV  
      IF(DABS(TST).LT.1.D-9) GO TO 952 
      IF(I.GE.100) THEN
      WRITE(6,'(''0KEPLER''''S EQUATION COULD NOT BE SOLVED. SET ECCENTR
     *ICITY TO 1.0.''/)')
      GO TO 952
      ENDIF
      FHV=FHVN  
      I=I+1
      GO TO 953 
  952 CONTINUE  
      XOB=AN1*(DCOSH(FHV)-ECR)  
      AN4=ECR**2-1.D0   
      YOB=-AN1*DSQRT(AN4)*DSINH(FHV)
      XG=XOB*PX+YOB*QX  
      YG=XOB*PY+YOB*QY  
      ZG=XOB*PZ+YOB*QZ  
      RETURN
C   
C   ELLIPTIC CASE
   85 A=Q/(1.0-ECR)     
      ART=DSQRT(A)  
      AR=XK*(TOBS-TT)/(ART**3)  
      I=1   
      EE1=AR
      EE=EE1
   86 DE=EE1-EE+ECR*DSIN(EE)
      DELE=DE/(1.0D0-ECR*DCOS(EE +0.5D0*DE))
      EE=EE+DELE
      IF(DABS(DELE).LT.1.D-9) GO TO 87
      IF(I.GT.100) THEN
      WRITE(6,'(''0KEPLER''''S EQUATION COULD NOT BE SOLVED. SET ECCENTR
     *ICITY TO 1.0.''/)')
      GO TO 87
      ENDIF
      I=I+1
      GO TO 86  
   87 CONTINUE  
      B=A*DSQRT(1.0D0-ECR**2)   
      FAT1=DCOS(EE)-ECR 
      FAT2=DSIN(EE)     
      XG=A*PX*FAT1+B*QX*FAT2
      YG=A*PY*FAT1+B*QY*FAT2
      ZG=A*PZ*FAT1+B*QZ*FAT2
      RETURN
      END   
      SUBROUTINE VRLINE(TOBS,RSG,RA,DEC,DRA,DDEC,IQUINX)    
C
C     THIS SUBROUTINE COMPUTES VARIATIONS IN RIGHT ASCENSION AND
C     DECLINATION. THE HELIOCENTRIC POSITION OF THE BODY AT THE DATE
C     TOBS+10 DAYS IS COMPUTED AND ADDED TO THE GEOCENTRIC SOLAR 
C     POSITION AT THE DATE TOBS. VALUES OF RIGHT ASCENSION (PRA) AND
C     DECLINATION (PDEC) ARE THEN COMPUTED WITH THIS VECTOR, AND THEN
C     DIFFERENCED WITH THE INPUT VALUES OF RA AND DEC AT THE DATE TOBS.
C     THESE DIFFERENCES (DRA AND DDEC) ARE THEN DIVIDED BY 10 TO GIVE
C     A ONE DAY AVERAGE OF THE VARIATIONS.
C
C     REFERENCE: HERGET,P, THE COMPUTATION OF ORBITS, PRIVATELY 
C                PUBLISHED, 1948, P.112.
C
C     INPUT:
C        TOBS - D.P. - JULIAN EPHEMERIS DATE
C        RSG  - D.P. - GEOCENTRIC SOLAR COORDINATES, WRT MEAN EQUATOR
C                      OF B1950.0 OR J2000.0, IN AU'S.
C        RA,DEC -D.P.- RIGHT ASCENSION AND DECLINATION REFERRED TO THE
C                      MEAN EQUATOR AND EQUINOX OF B1950.0 OR J2000.0.
C        IQUINX -D.P.- EQUINOX THAT THE VARIATIONS ARE REFERRED TO.
C                      IQUINX = 1 INDICATES THE B1950.0 EQUINOX.
C                      IQUINX = 2    "       "  J2000.0    "   .
C
C     OUTPUT:
C        DRA,DDEC - D.P. - VARIATIONS IN RIGHT ASCENSION AND DECLINATION
C                          FROM RA AND DEC. DRA IS IN TIME MINUTES, AND
C                          DDEC IS IN ARC MINUTES.
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DOUBLE PRECISION PRCH(6),PRCG(6),RSG(6)   
      COMMON/ELM/TT,Q,ECR,PX,PY,PZ,QX,QY,QZ     
      DATA TWOPI/6.283185307179586D0/   
      DATA CAUPD/173.1446335D0/     
      DATA DPR/57.2957795130823252D0/   
      DATA VAR/10.D0/   
C   
      PI=TWOPI/2.D0
      DO 5 I = 1,6
    5 PRCH(I) = 0.0D0
      PDTZ=0.D0 
      PETINC=0.D0   
      PTT=TT+VAR
      CALL HELXYZ(TOBS,PTT,Q,ECR,PX,PY,PZ,QX,QY,QZ,
     *PRCH(1),PRCH(2),PRCH(3))  
      IF(IQUINX.EQ.2) CALL J2000(PRCH)   
C   
   11 DO 12 I=1,3   
   12 PRCG(I)=PRCH(I)+RSG(I)
      PSR=DSQRT(PRCG(1)**2+PRCG(2)**2+PRCG(3)**2)   
      PDT=PSR/CAUPD     
      IF(DABS(PDT-PDTZ).LT.1.D-7) GO TO 15   
      PETINC=PETINC+PDTZ-PDT
      PETT2=TOBS+PETINC 
      PDTZ=PDT  
      CALL HELXYZ(PETT2,PTT,Q,ECR,PX,PY,PZ,QX,QY,QZ,
     *PRCH(1),PRCH(2),PRCH(3))  
      IF(IQUINX.EQ.2) CALL J2000(PRCH)  
      GO TO 11  
C   
   15 PDEC=DASIN(PRCG(3)/PSR)   
      PRA=DATAN2(PRCG(2),PRCG(1))   
      PRA=DMOD(PRA,TWOPI)
      RA=DMOD(RA,TWOPI)
      DRA=PRA-RA
      IF(DRA.GT.PI)  DRA=DRA-TWOPI
      IF(DRA.LT.-PI) DRA=DRA+TWOPI
      DDEC=PDEC-DEC     
      DRA=DRA*DPR*60.D0/(15.D0*VAR) 
      DDEC=DDEC*DPR*60.D0/VAR   
      RETURN
      END   
      SUBROUTINE J2000(X)   
C   
C     THIS SUBROUTINE CONVERTS POSITIONS FROM THE B1950.0 TO THE
C     J2000.0 EQUINOX AND THE FK4 CATALOG TO THE FK5 BASED ON IAU   
C     RECOMMENDATIONS (REF. STANDISH,E.M., CONVERSIONS OF POSITIONS AND 
C     PROPER MOTIONS FROM B1950.0 TO THE IAU SYSTEM AT J2000.0, 
C     ASTRONOMY AND ASTROPHYSICS, VOL. 15, PP. 20-22, 1982).
C   
C     NOTE: ONLY POSITION COORDINATES ARE PROCESSED, NOT VELOCITIES.    
C
C     NOTE ALSO THAT MATRIX CM IS FROM AOKI (REF: AOKI,S, SOMA,M,
C     KINOSHITA,H, AND INOUE,K, CONVERSION MATRIX OF EPOCH B1950.0
C     FK4-BASED POSTIONS OF STARS TO EPOCH J2000.0 POSITIONS IN
C     ACCORDANCE WITH THE NEW IAU RESOLUTIONS, ASTRONOMY AND 
C     ASTROPHYSICS, 128, PP.263-267, 1983).
C   
      REAL*8 CM(6,6),X(6),Y(6)  
      DATA CM/+0.9999256782D0,+0.0111820609D0,+0.0048579479D0,  
     *-0.00055D0,+0.23849D0,-0.43562D0, 
     *-0.0111820610D0,+0.9999374784D0,-0.0000271474D0,  
     *-0.23854D0,-0.00267D0,+0.01225D0, 
     *-0.0048579477D0,-0.0000271765D0,+0.9999881997D0,  
     *+0.43574D0,-0.00854D0,+0.00212D0, 
     *+0.0000024239502D0,+0.0000000271066D0,+0.0000000117766D0, 
     *+0.99994704D0,+0.01118251D0,+0.00485767D0,
     *-0.0000000271066D0,+0.0000024239788D0,-0.0000000000658D0, 
     *-0.01118251D0,+0.99995883D0,-0.00002714D0,
     *-0.0000000117766D0,-0.0000000000659D0,+0.0000024241017D0, 
     *-0.00485767D0,-0.00002718D0,+1.00000956D0/
C   
      DO 20 I=1,3   
   20 Y(I)=CM(I,1)*X(1)+CM(I,2)*X(2)+CM(I,3)*X(3)   
      DO 30 I=1,3   
   30 X(I)=Y(I) 
      RETURN
      END   
      Subroutine EL5020(WI, NI, II, WP, NP, IP)
C     Subroutine EL5020 computes the angular elements (inclination,
C     longitude of the ascending node, and argument of perihelion) of a
C     minor planet or comet at J2000 on the FK5 system from the angular
C     elements at B1950.0 on the FK4 system using E.M. Standish's
C     algorithm.
C
C     Coded by M.S.W. Keesey, February 1992.
C
C     External References: None
C
      DOUBLE PRECISION WI, NI, II, WP, NP, IP
C
C     Input: Angle elements (WI, NI, II) wrt mean ecliptic and equinox of
C            B1950.0 on the FK4 system, where:
C                    WI = Argument of perihelion (deg).
C                    NI = Longitude of the ascending node (deg).
C                    II = Inclination (deg).
C
C     Output: Angle elements (WP, NP, IP) wrt mean ecliptic and equinox of
C             J2000.0 on the FK5 system, where:
C                    WP = Argument of perihelion (deg).
C                    NP = Longitude of the ascending node (deg).
C                    IP = Inclination (deg).
C
      DOUBLE PRECISION J, L, LP, JD, LD, LPD, W, N, I
      DOUBLE PRECISION SJ, CJ, SI, CI, SLPN, CLPN
      DOUBLE PRECISION SS, CS, LPN, LPPNP, WPMW, CIP
      DOUBLE PRECISION TWOPI, DPR
C
      PARAMETER (JD  = 0.00651966D0)
      PARAMETER (LD  = 5.19856209D0)
      PARAMETER (LPD = 4.50001688D0)
      PARAMETER (TWOPI = 6.283185307179586D0)

C
      DPR = 360.D0 / TWOPI
C
      J  = JD  / DPR
      L  = LD  / DPR
      LP = LPD / DPR
      W  = WI  / DPR
      N  = NI  / DPR
      I  = II  / DPR
      LPN = L + N
      SI  = SIN(I)
      CI  = COS(I)
      SJ  = SIN(J)
      CJ  = COS(J)
      SLPN= SIN(LPN)
      CLPN= COS(LPN)
C
      SS   = SJ * SLPN
      CS   = SI * CJ + CI * SJ * CLPN
      WPMW = ATAN2(SS,CS)
      WP  = (WPMW + W) * DPR
C
      CIP = CI * CJ - SI *SJ *CLPN
      IP  = ACOS(CIP) * DPR
C
      SS  = SI * SLPN
      CS  = CI * SJ + SI * CJ * CLPN
      LPPNP = ATAN2(SS,CS)
      NP = (LPPNP - LP) * DPR
C
      IF (WP .GE. 360.D0) WP = WP - 360.D0
      IF (WP .LT. 0.D0)   WP = WP + 360.D0
      IF (NP .LT. 0.D0)   NP = NP + 360.D0
C
      RETURN
      END
      SUBROUTINE EL2050(W2,N2,I2,W5,N5,I5)
C     Subroutine EL2050 computes the angular elements (inclination,
C     longitude of the ascending node, and argument of perihelion) of a
C     minor planet or comet at B1950.0 on the FK4 system from the angular
C     elements at J2000.0 on the FK5 system using formula derived from 
C     E.M. Standish's diagram.
C
C     Coded by M.S.W. Keesey, February 1992.
C
C     External References: None
C
      DOUBLE PRECISION W2, N2, I2, W5, N5, I5
C
C     Input: Angle elements (W2, N2, I2) wrt mean ecliptic and equinox of
C            J2000.0 on the FK5 system, where:
C                    W2 = Argument of perihelion (deg).
C                    N2 = Longitude of the ascending node (deg).
C                    I2 = Inclination (deg).
C
C     Output: Angle elements (W5, N5, I5) wrt mean ecliptic and equinox of
C             B1950.0 on the FK4 system, where:
C                    W5 = Argument of perihelion (deg).
C                    N5 = Longitude of the ascending node (deg).
C                    I5 = Inclination (deg).
C
      DOUBLE PRECISION J, L, LP, JD, LD, LPD, WP, NP, IP
      DOUBLE PRECISION SJ, CJ, SIP, CIP, SLPPNP, CLPPNP
      DOUBLE PRECISION SS, CS, LPN, LPPNP, WPMW, CI
      DOUBLE PRECISION TWOPI, DPR
C
      PARAMETER (JD = 0.00651966D0)
      PARAMETER (LD = 5.19856209D0)
      PARAMETER (LPD= 4.50001688D0)
      PARAMETER (TWOPI = 6.283185307179586D0)
C
      DPR = 360.D0 / TWOPI
C
      J   = JD  / DPR
      L   = LD  / DPR
      LP  = LPD / DPR
      WP  = W2  / DPR
      NP  = N2  / DPR
      IP  = I2  / DPR
      LPPNP = LP + NP
      SIP = SIN(IP)
      CIP = COS(IP)
      SJ  = SIN(J)
      CJ  = COS(J)
      SLPPNP = SIN(LPPNP)
      CLPPNP = COS(LPPNP)
C
      SS   = SJ * SLPPNP
      CS   = SIP * CJ - CIP * SJ * CLPPNP
      WPMW = ATAN2(SS,CS)
      W5   = (WP - WPMW) * DPR
C
      CI = CIP * CJ + SIP * SJ * CLPPNP
      I5 = ACOS(CI) * DPR
C
      SS  = SIP * SLPPNP
      CS  = SIP * CJ * CLPPNP - CIP * SJ
      LPN = ATAN2(SS,CS)
      N5  = (LPN - L) * DPR
C
      IF  (W5 .LT. 0.D0) W5 = W5 + 360.D0
      IF  (N5 .LT. 0.D0) N5 = N5 + 360.D0
C
      RETURN
      END

