C++****************************************************************
C PROGRAM FITOU
C
C	IMAGE(NPL,NL) Input image to be drawn
C	 (REAL*4)
C	AUX(I) : INTENSITE DU NIVEAU I (REEL)
C	NIV(I) : INTENSITE DU NIVEAU I (ENTIER)
C	ID(5) : MAILLE ELEMENTAIRE POUR LE TRACE DES ISOPHOTES
C	JK(4) : MAILLE ELEM. DE TEST ( > OU < A L'ISOPHOTE)
C
C JLP Version of 14-07-87
C--****************************************************************
	PROGRAM FITOU
	PARAMETER (IDIM=600)
	REAL*8 Z,PI,OX,OY,THEMIN,THEMAX,SCALE
	REAL*4 XOUT,YOUT,NIV(100)
	REAL*4 ID1(IDIM),ID2(IDIM),ID(5)
	INTEGER*4 JK(4)
	REAL*4 IMAGE(IDIM,IDIM)
	LOGICAL AUTO_GUESS,AUTO_IMPROVE,FOURIER,KAMIKAZE
	LOGICAL*1 BELL,ICHA
	CHARACTER ANS*1,NAME*40,COMMENTS*80
 
	COMMON/BLOCKA/PI,OX,OY,THEMIN,THEMAX
	COMMON/BLOCKB/XOUT(6000),YOUT(6000)
C XOUT and YOUT : input arrays for EFIT
	COMMON/BLOCKC/SCALE
	COMMON/FIT1/Z(5),M,IFAIL
C Output from EFIT and input for GENE_ELLIPSE
C Z(1): major axis
C Z(2): minor axis
C Z(3): Thetac (radians)
C Z(4): XC
C Z(5): YC
 
	OPEN(9,FILE='fitou.log',STATUS='unknown',
     1	ACCESS='SEQUENTIAL')
	OPEN(11,FILE='fitou.tmp',STATUS='SCRATCH')
	DATA BELL/'007'O/
810	FORMAT(1X,A)	
10	FORMAT(A)
	IOPT=0
 
C Input the image :
	CALL JLP_INQUIFMT
103	PRINT *,' INPUT FILE ?'
	READ(5,10) NAME
	CALL JLP_READIMAG(IMAGE,NPL,NL,IDIM,NAME,COMMENTS)
	WRITE (9,104)NAME
104	FORMAT(/,2X,' INPUT FILE : ',A30,/)
 
C Input the parameters for drawing the levels
	PRINT *,' SCALE IN ARCSEC PER PIXEL ?'
	READ(5,*) SCALE
	PRINT 9000
9000	FORMAT(' POSITION DU CENTRE DES ISOPHOTES XC,YC ?')
	READ(5,*) OX,OY
8	PRINT 3
3	FORMAT(' INDICES DU 1ER POINT,DU DERNIER POINT ET PAS ?')
	READ(5,*) NPL1,NPL2,IPASX
	NM1=(NPL2-NPL1)/IPASX+1
C NM1: NOMBRE DE POINTS A TRACER, PAR LIGNE
	IF(NM1.GT.IDIM.OR.NPL2.GT.NPL) GO TO 8
8000	PRINT 6004
6004	FORMAT(' INDICES DE LA 1ERE LIGNE,DE LA DERNIERE LIGNE ET PAS')
	READ(5,*) NL1,NL2,IPASY
	NLG=(NL2-NL1)/IPASY+1
C NLG : NOMBRE DE LIGNES A TRACER
	IF(NLG.GT.IDIM.OR.NL2.GT.NL) GO TO 8000
 
C GX=780./(FLOAT(NPL2-NPL1)*ABS(FLOAT(IDX)))
	GX=6.5/FLOAT(NPL2-NPL1+1)
C ON TRACAIT L'IMAGE DANS UN CADRE COMPRIS DANS 780 X 780
C NOW 6.5*5.5
C GY=780./FLOAT(NL2-NL1)
	GY=5.5/FLOAT(NL2-NL1+1)
	GG=AMIN1(GX,GY)
	GX=GG
	GY=GG
	TDX=FLOAT(IPASX)*GG
	TDY=FLOAT(IPASY)*GG
C TDX, TDY, PAS EN X, Y (EN UNITES DE "TRACE")
 
C IOPT=2 i.e. we only want to change the limits for the display
	IF(IOPT.EQ.2) GO TO 201
 
C*******************************************************************
C	ENTREE DES NIVEAUX DES ISOPHOTES
C*******************************************************************
430	PRINT 100
100	FORMAT(' NOMBRE DE NIVEAUX ? =',$)
	READ(5,*) NNIV
	PRINT 212
212	FORMAT(' VALEURS DES DENSITES DES NIVEAUX :',/,
     1	'(TAPEZ SUR "RETURN" APRES CHAQUE VALEUR)')
	DO 213 INIV=1,NNIV
	READ(5,*) VV
	NIV(INIV)=VV
213	CONTINUE
 
C
C Begining to draw...
C
 
201	PRINT 810,BELL
 
 
	CALL LIRE11(IMAGE,NL1,NPL1,NPL2,IPASX,ID1,IDIM)
	PRINT *,' TYPE RETURN WHEN READY'
	READ(5,10) ANS
 
C PLTDEV selects the device (here the tektronix)
	CALL STR_PLTDEV(1)
 
C
C Loop on the lines
C
	DO 25 IY=1,NLG-1
	IZY=IY
	NLI=NL1+IZY*IPASY
	CALL LIRE11(IMAGE,NLI,NPL1,NPL2,IPASX,ID2,IDIM)
C
C Loop on the points
C
	DO 20 IX=1,NM1-1
	IZX=IX
	ID(1)=ID1(IZX)
	ID(2)=ID1(IZX+1)
	ID(4)=ID2(IZX)
	ID(3)=ID2(IZX+1)
	ID(5)=ID(1)
	DMI=AMIN1(ID(1),ID(2),ID(3),ID(4))
	DMA=AMAX1(ID(1),ID(2),ID(3),ID(4))
C****************************************************************
C BOUCLE SUR LES NIVEAUX ET TRACE DES ISOPHOTES DANS
C LA CASE ELEMENTAIRE ID(5)
C	
C DDT : current level
C
C****************************************************************
	   DO 22 INIV=1,NNIV
	   DDT=NIV(INIV)
	   IF(DDT.GT.DMA.OR.DDT.LT.DMI) GO TO 22
 
	     DO 30 K=1,4
	     JK(K)=0
	     P=(DDT-ID(K))*(DDT-ID(K+1))
	     IF(P.LE.0.) JK(K)=1
C JK(K)=1 I.E. ISOPHOTE ENTRE K ET K+1
C JK(K)=2 I.E. ISOPHOTE SUR K ET SUR K+1
	     IF(P.EQ.0..AND.ID(K).EQ.ID(K+1)) JK(K)=2
30	     CONTINUE
 
	   MIJ=MIN0(JK(1),JK(2),JK(3),JK(4))
C
C Case when the isophote goes through the grid
C between the points
C   (MIJ=0) MIJ.NE.1 substituted by MIJ.EQ.0
C
	   IF(MIJ.EQ.0) THEN
	     DO 31 K=1,4
	     IF(JK(K).EQ.1) K2=K
31	     CONTINUE
	CALL TRAC(K2,DDT,ID,IZX,IZY,TDX,TDY,0)
	   K3=K2-1
	   IF(ID(K2).EQ.DDT) K3=K2-2
	     DO 32 K=1,K3
	     IF(JK(K).EQ.1) K2=K
32	     CONTINUE
	   CALL TRAC(K2,DDT,ID,IZX,IZY,TDX,TDY,1)
	   GO TO 22
	   ENDIF
 
	   MAJ=MAX(JK(1),JK(2),JK(3),JK(4))
C
C Case when all the isophote circles two points of the grid
C
	   IF(MAJ.NE.2) THEN
	   DK=(ID(1)-DDT)*(ID(3)-ID(4)-ID(2)+ID(1))-
     1	(ID(1)-ID(2))*(ID(1)-ID(4))
	   K=0
	      IF(DK.LT.0.) K=1
	   CALL TRAC(1,DDT,ID,IZX,IZY,TDX,TDY,0)
	   CALL TRAC(2+2*K,DDT,ID,IZX,IZY,TDX,TDY,1)
	   CALL TRAC(3-K,DDT,ID,IZX,IZY,TDX,TDY,0)
	   CALL TRAC(4-K,DDT,ID,IZX,IZY,TDX,TDY,1)
	   GO TO 22
	   ENDIF
C
C Case when the maximum is 2 ,i.e. two successive values are
C identical in the grid, and equal the level.
C
	   K2=0
 
	     DO 330 K=1,4
	     P=(ID(K+1)-DDT)*(ID(K)-DDT)
	     IF(P.LT.0.) K2=K
330	     CONTINUE
 
C
C Here all the values of the grid are identical
C
	   IF(K2.EQ.0) THEN
	     K2=5
	     DO 335 K=2,4
	     IF(ID(K).NE.DDT) K2=K
335	     CONTINUE
 
	     DO 336 L=1,2
	     K3=K2-1
	     K4=K3/2
	     X0=MOD(K4,2)
	     Y0=(K3-1)/2
C ITX=INT((FLOAT(IZX-1)+X0)*TDX)
C ITY=INT((FLOAT(IZY-1)+Y0)*TDY)
C CALL FTPLOT(L-1,ITX,ITY)
	     TX=(FLOAT(IZX-1)+X0)*TDX
	     TY=(FLOAT(IZY-1)+Y0)*TDY
	     IPEN=4-L
	     CALL STR_PLOT(TX,TY,IPEN)
	     K2=MOD(K2,4)+2
336	     CONTINUE
 
	     GO TO 22
	     ENDIF
 
C
C Here K2 .ne. 0.
C
	   CALL TRAC(K2,DDT,ID,IZX,IZY,TDX,TDY,0)
	   K4=K2+1
	   K3=MOD(K4,4)+1
	   U=(DDT-ID(K2))/(ID(K2+1)-ID(K2))
	   K1=K3/2
	   IK1=MOD(K1,2)
	   IK2=MOD(K3,2)
 
	   IF(IK2) 331,331,332
332	   X0=U+IK1-2.*U*IK1
	   X0=1.-X0
	   Y0=IK1
	   GO TO 333
331	   X0=IK1
	   Y0=-U-IK1+2*U*IK1+1.
	   Y0=1.-Y0
 
333	 CONTINUE
C Just an instruction for the label
 
C ITX=INT((FLOAT(IZX-1)+X0)*TDX)
C ITY=INT((FLOAT(IZY-1)+Y0)*TDY)
C CALL FTPLOT(1,ITX,ITY)
	   TX=(FLOAT(IZX-1)+X0)*TDX
	   TY=(FLOAT(IZY-1)+Y0)*TDY
	   CALL STR_PLOT(TX,TY,2)
 
	     DO 334 L=1,2
	     K0=K3/2
	     K0=MOD(K0,2)
	     X0=K0
	     Y0=(K3-1)/2
C ITX=INT((FLOAT(IZX-1)+X0)*TDX)
C ITY=INT((FLOAT(IZY-1)+Y0)*TDY)
C CALL FTPLOT(L-1,ITX,ITY)
	     TX=(FLOAT(IZX-1)+X0)*TDX
	     TY=(FLOAT(IZY-1)+Y0)*TDY
	     IPEN=4-L
	     CALL STR_PLOT(TX,TY,IPEN)
	     K3=MOD(K3,4)+1
334	CONTINUE
 
	   GO TO 22
 
C End of the loop on the levels
C
22	CONTINUE
 
C End of the loop on the points
C
20	CONTINUE
 
 
	DO IPL=1,NM1
	ID1(IPL)=ID2(IPL)
	END DO
C End of the loop on the lines
C
25	CONTINUE
 
 
C***************************************************
C Drawing the frame ....
C
C AXLEN= LENTH IN X
C AYLEN= LENTH IN Y
 
	OFFX=0.
	OFFY=0.
	AXLEN=FLOAT(NM1)*TDX
	AYLEN=FLOAT(NLG)*TDY
	XEND=AXLEN+OFFX
	YEND=AYLEN+OFFY
	CALL STR_PLOT(OFFX,OFFY,3)
	CALL STR_PLOT(XEND,OFFY,2)
	CALL STR_PLOT(XEND,YEND,2)
	CALL STR_PLOT(OFFX,YEND,2)
	CALL STR_PLOT(OFFX,OFFY,2)
	CALL STR_PLOT(OFFX,YEND,3)
C	WRITE(KB,410) FICH
C	CALL MOMENT
410	FORMAT(/,58X,'FICHIER',/,58X,A20)
C	WRITE(KB,411) NPL1,NPL2,IPASX
C	CALL MOMENT
411	FORMAT(/,58X,'X=',I5,' A',I5,/,58X,'PAS:',I3)
C	WRITE(KB,412)NL1,NL2,IPASY
C	CALL MOMENT
412	FORMAT(/,58X,'Y=',I5,' A',I5,/,58X,'PAS:'I3)
C	WRITE(KB,413)
C	CALL MOMENT
413	FORMAT(/,61X,'NIVEAUX')
C	WRITE(KB,414) (NIV(I),I=1,NNIV)
C	CALL MOMENT
414	FORMAT(60X,F9.1)
 
	PRINT 810,BELL
301	JJ=0
	CALL STR_WHERE(XNOW,YNOW,ICHA)
 
94	IF(ICHA.NE.32)GOTO 95
	JJ=JJ+1
	CALL STR_SYMBOL(XNOW,YNOW,0.1,4,0.0,-1)
	XOUT(JJ)=((XNOW-OFFX)/GX)+FLOAT(NPL1)
	YOUT(JJ)=((YNOW-OFFY)/GY)+FLOAT(NL1)
	CALL STR_WHERE(XNOW,YNOW,ICHA)
        GOTO 94

95	NOUT=JJ
 
	IF(NOUT.EQ.0)THEN
	CALL STR_PLOT(0.,0.,999)
	CALL STR_PLTDEV(1)
	CALL STR_PLOT(0.,0.,999)
	PRINT 310
310	FORMAT(' MENU :',/,' 1: CHANGE THE LEVELS',/,
     1	' 2: CHANGE THE LIMITS FOR THE DISPLAY',/,
     1	' 3: EXIT',/,' ENTER THE OPTION YOU WANT')
	READ(5,*) IOPT
	IF(IOPT.EQ.1) GO TO 430
	IF(IOPT.EQ.2) GO TO 8
	IF(IOPT.EQ.3) GO TO 9999
	ENDIF
 
C Fitting an ellipse to the entered points XOUT and YOUT
	AUTO_IMPROVE=.TRUE.
	AUTO_GUESS=.TRUE.
	FOURIER=.TRUE.
	KAMIKAZE=.FALSE.
	CALL EFIT(NOUT,5,AUTO_GUESS,AUTO_IMPROVE,FOURIER,KAMIKAZE)
	IF(IFAIL.NE.0) GO TO 301
C Generating the ellipse	
	CALL GENE_ELLIPSE(XOUT,YOUT,NPOINT,Z,0.,0.,0)
 
C Displaying the ellipse on the tektronix
C DELTAX : number of pixels per inch in the X axis
C DELTAY : number of pixels per inch in the Y axis
	DELTAX=1./GX
	DELTAY=1./GY
	XOUT(NPOINT+1)=FLOAT(NPL1)-OFFX*DELTAX
	XOUT(NPOINT+2)=DELTAX
	YOUT(NPOINT+1)=FLOAT(NL1)-OFFY*DELTAY
	YOUT(NPOINT+2)=DELTAY
	CALL STR_LINE(XOUT,YOUT,NPOINT,1,0,1)
 
C Entering new points for the next level
	PRINT 810,BELL
	GO TO 301
 
 
C	FIN DE L IMPRESSION SUR TEKTRONIX
9999	CALL STR_PLOT(0.,0.,999)
C ECALC is called at the end to tidy up the ellipse fit output
	CALL ECALC
	PRINT *,' Results in "fitou.log"'
	CLOSE(9)
	CLOSE(11)
	STOP
	END
C***********************************************************
C	SUBROUTINE TRAC(K2,DDT,ID,IZX,IZY,TDX,TDY,ISTAT)
C       K2 :between 1 and 4
C	DDT : current level
C	ID(5) : current grid
C	IZX, IZY : Coordinates of the first point of the grid
C	TDX, TDY : Scale for drawing in x and y
C	ISTAT : either 0 or 1
C************************************************************
	SUBROUTINE TRAC(K2,DDT,ID,IZX,IZY,TDX,TDY,ISTAT)
	REAL*4 ID(5)
	REAL*4 TDX,TDY
 
	OFFX=0.
	OFFY=0.
	ZX=FLOAT(IZX)
	ZY=FLOAT(IZY)
 
	IF(K2.EQ.1)THEN
	ZX=ZX+0.5
	ENDIF
 
	IF(K2.EQ.2)THEN
	ZX=ZX+1.
	ZY=ZY+0.5
	ENDIF
 
	IF(K2.EQ.3)THEN
	ZX=ZX+0.5
	ZY=ZY+1.
	ENDIF
 
	IF(K2.EQ.4)THEN
	ZX=ZX
	ZY=ZY+0.5
	ENDIF
 
	XSTART=OFFX+ZX*TDX
	YSTART=OFFY+ZY*TDY
	IPEN=3-ISTAT
	CALL STR_PLOT(XSTART,YSTART,IPEN)
	RETURN
	END
C***********************************************************
	include 'jlpsub:isophote_set.for'
	include 'jlpsub:efit.for'
	include 'jlpsub:gene_ellipse.for'
