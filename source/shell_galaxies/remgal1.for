C++**************************************************************
C	REMGAL1
C
C Removes the galaxy in a CCD image
C Removes a smoothed profile with a complex geometry :
C ellipses with parameters changing with the equivalent radius.
C (Chebycheff polynomial fitted to the parameters)
C The profile values are obtained by fitting a polynomial to the
C input levels of the ellipse fitting procedure (made by FITELLI)
C
C Reads the parameters of the ellipses fitted to the galaxy,
C as generated by "FITELLI":
C
C ASCII file with the following format:
C 9 lines of comments, 1 line with the scale in arcsec/pixel
C and then lines with 6 values:
C Semi-major axis (arcsec), Axis ratio b/a, Position angle (degrees),
C X centre (pixels), Y centre (pixels), and Level of the isophote (ADU)
C The last line should contain dummy parameters at the level of the sky
C
C From PLAGAL_BATCH and PLAGAL
C
C Differences with REMGAL:
C  Here: no possibility of a smaller output file.
C  Here: polynomial fit to the parameters 
C         (cubic spline interpolation with REMGAL) 
C
C Syntax:
C Example:  runs remgal1 ngc474R ngc474R_rem1 ngc474R_elli.epa 3,3,2,2,5
C
C
C JLP 
C Version of 10/05/99
C--**************************************************************
	PROGRAM REMGAL1
	REAL*8 ELLP0(6)
	REAL*4 SMAJMIN,SMAJMAX,SCALE,SKY,SIGMA,BACKG
	REAL*8 CHEBY(20,5),XMIN,XMAX,DELTA,CHEBY0(20)
	INTEGER*4 KK,PNTR_IN,PNTR_OUT
	CHARACTER NAMEPAR*40,NAMEIN*40,NAMEOUT*40,ANS*1,COMMENTS*80
	INTEGER*4 MADRID(1)
	COMMON /VMR/MADRID
	COMMON/PLG_PARAM/SMAJMIN,SMAJMAX,SCALE,SKY,BACKG,ELLP0,CHEBY,KK(5)
	COMMON/CHEBYFIT1/CHEBY0,XMIN,XMAX,DELTA
 
10	FORMAT(A)
 
C Open "remgal.log" to keep a trace of what has been done:
	OPEN(9,FILE='remgal.log',STATUS='unknown',
     1	ACCESS='SEQUENTIAL')
 
C Write the title :
	WRITE(9,81)
	PRINT 81
81	FORMAT(' PROGRAM REMGAL1 - Version of 10/05/99-',/)
 
        CALL JLP_BEGIN
C Inquires about the format of the files :
	CALL JLP_INQUIFMT
 
C Input of the names of the files:
	PRINT *,' INPUT IMAGE ?'
	READ(5,10) NAMEIN
 
	CALL JLP_VM_READIMAG(PNTR_IN,NX,NY,NAMEIN,COMMENTS)
	WRITE(9,82)NAMEIN
82	FORMAT(' INPUT IMAGE : ',A)
 
	PRINT *,' OUTPUT IMAGE ?'
	READ(5,10) NAMEOUT
	WRITE(9,83)NAMEOUT
83	FORMAT(' OUTPUT IMAGE : ',A)
 
C Name of the parameter file :
	PRINT *,' Input file with the ellipse parameters :'
	READ(5,10) NAMEPAR
 
C Order of the polynomial:
	PRINT 13
13	FORMAT(' Order of the polynomial for b/a, Theta, Xcent,',
     1	' Ycent, Level:',/,' (if don''t know, put 3,3,2,2,5) :')
	READ(5,*) (KK(I),I=1,5)
	WRITE(9,84) (KK(I),I=1,5)
84	FORMAT(' Order of the polynomial for b/a, Theta, Xcent,',
     1	' Ycent, Level:',/,5(1X,I3))
 
C Get dynamical memory for the output:
	CALL JLP_GETVM(PNTR_OUT,NX*NY*4)
 
C Sky level:
	CALL AUTO_SKY(MADRID(PNTR_IN),NX,NY,NX,SKY,SIGMA)
 
C We take a smaller value for the sky (for a better fit):
	BACKG=SKY-3.*SIGMA
	WRITE(9,85) BACKG
85	FORMAT(' We take a smaller value for the sky (for a better fit)',
     1	/,' New sky level:',G12.4)
 
C Read the parameter file and fit a chebycheff polynomial to the parameters:
	CALL PLG_RDPARAM(NAMEPAR)
 
C Subtracting the galaxy :
	CALL PLG_REMOVE(MADRID(PNTR_IN),MADRID(PNTR_OUT),NX,NY,NX)
 
C Writing the output file with comments :
	LPAR=INDEX(NAMEPAR,' ')-1
	WRITE(COMMENTS,303)NAMEPAR(1:LPAR)
303	FORMAT('REMGAL1 with: ',A,' //')
	CALL JLP_WRITEIMAG(MADRID(PNTR_OUT),NX,NY,NX,NAMEOUT,COMMENTS)
 
C End :
	CLOSE(9)
	PRINT *,' OUTPUT IN "remgal.log"'
        CALL JLP_END
	END
C*************************************************************
C Subroutine PLG_RDPARAM
C to read the parameters of the ellipses fitted to the galaxy,
C as generated by "FITELLI":
C
C ASCII file with the following format:
C 9 lines of comments, 1 line with the scale in arcsec/pixel
C and then lines with 6 values:
C Semi-major axis (arcsec), Axis ratio b/a, Position angle (degrees),
C X centre (pixels), Y centre (pixels), and Level of the isophote (ADU)
C The last line should contain dummy parameters at the level of the sky
C
C Input:
C NAMEPAR
C BACKG: Background value (for the fit only)
C*************************************************************
	SUBROUTINE PLG_RDPARAM(NAMEPAR)
	PARAMETER (IDIM1=100)
	REAL*8 ELLPAR(IDIM1,6),XLEVEL(IDIM1)
	REAL*8 CHEBY(20,5),XMIN,XMAX,DELTA,CHEBY0(20)
	REAL*8 ELLP0(6),RESULT
	REAL*4 SMAJMIN,SMAJMAX,SCALE,SKY,SIGMA,BACKG
        INTEGER*4 KK
	CHARACTER NAMEPAR*40,BUFFER*80
	COMMON/PLG_PARAM/SMAJMIN,SMAJMAX,SCALE,SKY,BACKG,ELLP0,CHEBY,KK(5)
	COMMON/CHEBYFIT1/CHEBY0,XMIN,XMAX,DELTA
 
10	FORMAT(A)
 
	OPEN(3,FILE=NAMEPAR,STATUS='OLD',ERR=999)
 
C Go to the right position (skipping 3 lines) in the file:
	 DO I=1,3
	  READ(3,10,ERR=999)BUFFER
	 END DO
 
C Scale, NPTS
C	 READ(3,*,ERR=999) SCALE,NPTS
C JLP99: Only the number of points now:
         SCALE=1.
	 READ(3,*,ERR=999) NPTS
	 READ(3,10,ERR=999)BUFFER
 
C Read the parameters:
	DO J=NPTS,1,-1
	  READ(3,*,ERR=999) (ELLPAR(J,I),I=1,5),XLEVEL(J)
C JLP99: since 180-degree ambiguity
          IF(ELLPAR(J,3).GT.180) ELLPAR(J,3)=ELLPAR(J,3)-180.
          WRITE(6,*) (ELLPAR(J,I),I=1,5),XLEVEL(J)
	END DO
	SMAJMIN=ELLPAR(1,1)
	SMAJMAX=ELLPAR(NPTS,1)
 
C Transform the levels in log for a better fit:
28	CONTINUE
	  DO J=1,NPTS
	    WORK=XLEVEL(J)-BACKG
	    IF(WORK.GT.0.)THEN
	      ELLPAR(J,6)=ALOG10(WORK)
	    ELSE
	      PRINT *,' PB WITH THE',I,'th POINT, NEGATIVE VALUE,'
	      PRINT *,' I TAKE A SMALLER VALUE FOR THE BACKGROUND'
	      BACKG=XLEVEL(J)-3.*SIGMA
	      GO TO 28
	    ENDIF
	  END DO
 
C Fitting Chebycheff polynomial (5th order) to the parameters:
	ISORTED=1
	DO I=1,5
	  CALL CHEBYFIT(ELLPAR(1,1),ELLPAR(1,I+1),NPTS,KK(I),ISORTED)
C Transferring the coefficients:
	   DO K=1,KK(I)+1
	     CHEBY(K,I)=CHEBY0(K)
	   ENDDO
	END DO
 
C Output the two curves in a file:
	OPEN(14,FILE='remgal_pro.dat',STATUS='unknown')
	DO J=1,NPTS
C Transferring the coefficients:
	   DO K=1,KK(5)+1
	     CHEBY0(K)=CHEBY(K,5)
	   ENDDO
	   CALL CALCHEBY(ELLPAR(J,1),RESULT,KK(5))
	   WRITE(14,12) ELLPAR(J,1),ELLPAR(J,6),RESULT
12	   FORMAT(3(1X,G11.4))
	END DO
	CLOSE(14)
 
C Mean values for initialization:
	DO I=1,6
	  ELLP0(I)=0.
	  DO J=1,NPTS
	    ELLP0(I)=ELLPAR(J,I)+ELLP0(I)
	  END DO
	  ELLP0(I)=ELLP0(I)/FLOAT(NPTS)
	END DO
 
C Write to the logfile "remgal.log" :
	WRITE(9,73)NAMEPAR,NPTS
73	FORMAT(' Input profile: ',A,' NPTS =',I6)
 
C Return
	CLOSE(3)
	RETURN
 
C Exit if error :
999	 PRINT *,' PLG_RDPARAM/Error reading the parameter file',NAMEPAR
	 STOP
 
	END
C*************************************************************
C Subroutine PLG_REMOVE
C
C Input :
C INPUT(IDIM,*)
C NX,NY : Size of the image
C
C Output :
C OUTPUT(IDIM,*)
C
C*************************************************************
	SUBROUTINE PLG_REMOVE(INPUT,OUTPUT,NX,NY,IDIM)
	REAL*4 INPUT(IDIM,*),OUTPUT(IDIM,*)
	REAL*8 ELLP0(6),ELLP(6),CHEBY(20,5)
	REAL*4 X1,Y1,Z1
	REAL*4 SMAJMIN,SMAJMAX,SCALE,SKY,SIGMA,BACKG
        INTEGER*4 KK
	COMMON/PLG_PARAM/SMAJMIN,SMAJMAX,SCALE,SKY,BACKG,ELLP0,CHEBY,KK(5)
 
10	FORMAT(A)
 
C Initialize the ellipse parameters:
	CALL PLG_ELLINIT(ELLP)

C Main Loop :
	DO J=1,NY
	  Y1=FLOAT(J)
	  DO I=1,NX
	    X1=FLOAT(I)
            CALL PLG_VALUE(X1,Y1,Z1,ELLP,ISTAT)
C Subtracting Z1, the level corresponding to the semi-major axis
C of the ellipse containing the pixel (x,y)
	    IF(ISTAT.EQ.0.AND.INPUT(I,J).NE.0.)THEN
	       OUTPUT(I,J)=INPUT(I,J)-BACKG-10**Z1
C	       PRINT *,'Z1,INPUT(I,J),OUTPUT(I,J)',Z1,INPUT(I,J),OUTPUT(I,J)
C If semi-major axis too big, simply subtract the sky level:
             ELSEIF(ISTAT.EQ.-10)THEN
               OUTPUT(I,J)=INPUT(I,J)-SKY
C Otherwise, set the value to 0 (central regions)
             ELSE
               OUTPUT(I,J)=0.
             ENDIF
	  END DO
	  IF(MOD(J,40).EQ.0)PRINT *,' Done up to line:',J
	END DO
 
	RETURN
	END
 
C**********************************************************************
C Subroutine PLG_VALUE
C To compute the value Z1 in the pixel X1, Y1
C
C**********************************************************************
	SUBROUTINE PLG_VALUE(X1,Y1,Z1,ELLP,ISTAT)
	REAL*8 ELLP(6),PI
	REAL*4 X1,Y1,Z1
        REAL*4 UU,VV,WW,X2,Y2,CO,SI,F11,TT
	INTEGER*4 ISTAT
        PI=3.14159
 
C First guess, using the previous values of the ellipse parameters
C For a given pixel, we use the parameters determined by the previous one,
C to reduce computing time:
	X2=X1-ELLP(4)
	Y2=Y1-ELLP(5)
   	CO=COS(ELLP(3)*PI/180.)
	SI=SIN(ELLP(3)*PI/180.)
C
C	UU=CO*CO+(SI/ELLP(2))**2
C	VV=SI*SI+(CO/ELLP(2))**2
C	WW=2.*SI*CO*(1.-1./(ELLP(2)*ELLP(2)))
C
        TT=1./(ELLP(2)*ELLP(2))
        UU=CO*CO+SI*SI*TT
        VV=SI*SI+CO*CO*TT
        WW=2.*SI*CO*(1.-TT)
	F11=UU*X2*X2+VV*Y2*Y2+WW*X2*Y2
	SMAJ=SQRT(F11)
 
C------------------------------------------------------------
C Computing the semi-major axis in less than 30 iterations
        TOLERANCE=AMAX1(0.5,SMAJ/100.)

        DO I=1,30
C Computing the ellipse parameters for SMAJ (Axis ratio and position angle):
          CALL PLG_ELLPAR(SMAJ,ISTAT,ELLP,1,2)
          IF(ISTAT.NE.0) RETURN

C Computing the new value of the semi major axis SMAJ
C	  X2=X1-ELLP(4)
C	  Y2=Y1-ELLP(5)
          CO=COS(ELLP(3)*PI/180.)
          SI=SIN(ELLP(3)*PI/180.)
          TT=1./(ELLP(2)*ELLP(2))
          UU=CO*CO+SI*SI*TT
          VV=SI*SI+CO*CO*TT
          WW=2.*SI*CO*(1.-TT)
          F11=UU*X2*X2+VV*Y2*Y2+WW*X2*Y2
          SMAJ1=SQRT(F11)

C Test output (for debugging):
          IF(X1.EQ.190..AND.Y1.GT.30.)
     1    PRINT 29,X1,Y1,(ELLP(KI),KI=2,5),SMAJ1
29        FORMAT(' X,Y,AxisRatio,Theta,XC,YC,SMAJ',2(F5.1,1X),5(F7.3))

C Exit from the loop if small errors:
          ERROR=ABS(SMAJ1-SMAJ)
          IF(ERROR.LT.TOLERANCE) GOTO 25

C Dampering factor to avoid oscillations:
          SMAJ=SMAJ1*0.9+SMAJ*0.1
        END DO

        PRINT *,' WARNING: MORE THAN 30 ITERATIONS,  ERROR=',ERROR
        PRINT *,' TOO LARGE VARIATIONS FOR THE ELLIPSE PARAMETERS'

C Computing all the ellipse parameters for next step:
25	CALL PLG_ELLPAR(SMAJ,ISTAT,ELLP,1,5)
	Z1=ELLP(6)
 
	RETURN
	END
C**********************************************************************
C Subroutine PLG_ELLPAR
C To compute the ellipse parameters for a given semi major axis
C
C Input:
C SMAJ: semi major axis (pixels)
C
C Output:
C ELLP(6): ellipse parameters
C ISTAT: 0 if OK
C**********************************************************************
	SUBROUTINE PLG_ELLPAR(SMAJ,ISTAT,ELLP,I1,I2)
	REAL*8 CHEBY(20,5),XMIN,XMAX,DELTA,CHEBY0(20)
	REAL*8 ELLP0(6),ELLP(6)
	REAL*4 SMAJMIN,SMAJMAX,SCALE,SKY,SIGMA,BACKG,SMAJ
	INTEGER*4 KK,ISTAT,NCAP7(5)
	COMMON/PLG_PARAM/SMAJMIN,SMAJMAX,SCALE,SKY,BACKG,ELLP0,CHEBY,KK(5)
	COMMON/CHEBYFIT1/CHEBY0,XMIN,XMAX,DELTA
 
 	ISTAT=0
 
C Computing the corresponding parameters for the ellipse
C of semi-major axis SMAJ:
	ELLP(1)=SMAJ
	IF(SMAJ.GT.SMAJMIN.AND.SMAJ.LT.SMAJMAX)THEN
	  DO I=I1,I2
C Transferring the coefficients:
	     DO K=1,KK(I)+1
	       CHEBY0(K)=CHEBY(K,I)
	     ENDDO
	     CALL CALCHEBY(ELLP(1),ELLP(I+1),KK(I))
	  ENDDO
C Problem when the point is outside of the range in radius:
        ELSEIF(SMAJ.GE.SMAJMAX)THEN
          ISTAT=-10
        ELSE
          ISTAT=-11
	ENDIF
 
	RETURN	
	END
 
C**********************************************************************
C Subroutine PLG_ELLINIT
C Initilize the ellipse parameters UU, VV and WW
C
C**********************************************************************
	SUBROUTINE PLG_ELLINIT(ELLP)
	REAL*8 ELLP0(6),ELLP(6),CHEBY(20,5)
	REAL*4 SMAJMIN,SMAJMAX,SCALE,SKY,SIGMA,BACKG
        INTEGER*4 KK
	COMMON/PLG_PARAM/SMAJMIN,SMAJMAX,SCALE,SKY,BACKG,ELLP0,CHEBY,KK(5)
 
C First guess, using the mean values of the ellipse parameters
	DO I=1,6
	  ELLP(I)=ELLP0(I)
	END DO
 
	RETURN
	END
C********************************************************
	include 'jlpsub:auto_sky.for'
	include 'jlpsub:chebyfit.for'

