C++******************************************************************	
C Program SHELLS_PLOT
C To plot shell distributions generated by Peter Quinn's programs
C
C JLP Version 23-09-87
C--******************************************************************	
	PROGRAM SHELLS_PLOT
	PARAMETER (IDIM1=600,KCUR=20)
	REAL*4 INPUT(IDIM1,5)
	REAL*4 XPLOT(IDIM1,KCUR),YPLOT(IDIM1,KCUR)
	INTEGER NPTS(KCUR)
	CHARACTER NCHAR(KCUR)*4,PCOLOR(KCUR)*30
	CHARACTER CHAR1*30,CHAR2*30,TITLE*40,PLOTDEV*32
	CHARACTER ANS*1,NAME*40,BUFF*80
	LOGICAL REAL_DATA
 
10	FORMAT(A)
 
	PRINT 21
21	FORMAT(' PROGRAM SHELL_PLOT',/,
     1	' VERSION OF 01-02-88')
 
C Enter the columns to plot :
	PRINT 26
26	FORMAT(' TYPE OF DIAGRAM : 1= ln(dn/d1) vs ln(n-phi+tau-1) ',
     1	/,' OR                  2= ln(dn/d1) vs n  ?')
	READ(5,*) ICHOICE
	 IF(ICHOICE.EQ.1)THEN
	  CHAR1=' ln(n-phi+tau-1)'
	  CHAR2='ln(dn/d1)'
	  ICOLX=5
	  ICOLY=4
	 ELSE
	  CHAR1=' n'
	  CHAR2='ln(dn/d1)'
	  ICOLX=1
	  ICOLY=4
	 ENDIF
	
C Initialize the number of curves :
	KCU=0
 
C****************** LOOP ON THE INPUT FILES *****************
C Open the input file :
22	KCU=KCU+1
	PRINT *,' INPUT FILE ?'
	READ(5,10) NAME
	OPEN(1,FILE=NAME,STATUS='OLD',ERR=22)
 
C Read the header :
	READ(1,10)BUFF	
	PRINT *,BUFF
	READ(1,10)BUFF	
	PRINT *,BUFF
	READ(1,10)BUFF	
	PRINT *,BUFF
 
C Read the file :
	 DO I=1,1000
	  READ(1,*,END=999) (INPUT(I,K),K=1,5)
	 END DO
999	CLOSE(1)
	NPTS(KCU)=I-1
	PRINT *,NPTS(KCU),' POINTS ENTERED'
 
C Check if it is real data or not :
	PRINT *,' DO THEY RESULT FROM ACTUAL MEASUREMENTS',
     1	' OF A SHELL GALAXY (N)?'
	READ(5,10) ANS
	REAL_DATA=(ANS.EQ.'Y'.OR.ANS.EQ.'y')
 
C Load the curve (normalization with the last value) :
	IF(REAL_DATA)THEN
	    PRINT *,' ENTER TAU AND PHI :'
	    READ(5,*) TAU,PHI
	  IF(ICHOICE.EQ.1)THEN
	     DO I=1,NPTS(KCU)
	       XPLOT(I,KCU)=ALOG(INPUT(I,1)+TAU-PHI)
	       YPLOT(I,KCU)=INPUT(I,ICOLY)-INPUT(NPTS(KCU),ICOLY)
	     END DO
	  ELSE
	     DO I=1,NPTS(KCU)
	       XPLOT(I,KCU)=INPUT(I,1)+TAU
	       YPLOT(I,KCU)=INPUT(I,ICOLY)-INPUT(NPTS(KCU),ICOLY)
	     END DO
	  ENDIF
	ELSE
	    DO I=1,NPTS(KCU)
	      XPLOT(I,KCU)=INPUT(I,ICOLX)
	      YPLOT(I,KCU)=INPUT(I,ICOLY)-INPUT(NPTS(KCU),ICOLY)
	    END DO
	ENDIF
 
	PRINT *,' 2,3 TRIANGLE  4,5 + X  6,7 SQUARES 8,9  O '
	PRINT *,' SYMBOL : 42=CROSSES, 82=CIRCLES, ... ?'
	READ(5,10) NCHAR(KCU)
        PCOLOR(KCU)='Default'
 
	PRINT *,' DO YOU WANT TO DISPLAY ANOTHER CURVE ? (N)'
	READ(5,10) ANS
	IF(ANS.EQ.'Y'.OR.ANS.EQ.'y') GOTO 22
 
C********************* DISPLAYING THE CURVES *****************
C Plot the curves :
	  PRINT *,' OUTPUT DEVICE : FILE, TEKTRO, CIFER_T5,...'
	  READ(5,10) PLOTDEV
	  PRINT *,' TITLE ?'
	  READ(5,10) TITLE
 
	  CALL NEWPLOT(XPLOT,YPLOT,NPTS,IDIM1,KCU,
     1	CHAR1,CHAR2,TITLE,NCHAR,PCOLOR,PLOTDEV,' ',' ')
 
	END
